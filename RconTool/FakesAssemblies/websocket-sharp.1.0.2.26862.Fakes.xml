<?xml version="1.0"?>
<doc>
    <assembly>
        <name>websocket-sharp.1.0.2.26862.Fakes</name>
    </assembly>
    <members>
        <member name="T:WebSocketSharp.Fakes.ShimCloseEventArgs">
            <summary>Shim type of WebSocketSharp.CloseEventArgs</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimCloseEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimCloseEventArgs.#ctor(WebSocketSharp.CloseEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimCloseEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.AllInstances.CodeGet">
            <summary>Sets the shim of CloseEventArgs.get_Code()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.AllInstances.ReasonGet">
            <summary>Sets the shim of CloseEventArgs.get_Reason()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.AllInstances.WasCleanGet">
            <summary>Sets the shim of CloseEventArgs.get_WasClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.AllInstances.WasCleanSetBoolean">
            <summary>Sets the shim of CloseEventArgs.set_WasClean(Boolean value)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimCloseEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimCloseEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.CodeGet">
            <summary>Sets the shim of CloseEventArgs.get_Code()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.Constructor">
            <summary>Sets the shim of CloseEventArgs.CloseEventArgs()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.ConstructorCloseStatusCode">
            <summary>Sets the shim of CloseEventArgs.CloseEventArgs(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.ConstructorCloseStatusCodeString">
            <summary>Sets the shim of CloseEventArgs.CloseEventArgs(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.ConstructorUInt16">
            <summary>Sets the shim of CloseEventArgs.CloseEventArgs(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.ConstructorUInt16String">
            <summary>Sets the shim of CloseEventArgs.CloseEventArgs(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.ReasonGet">
            <summary>Sets the shim of CloseEventArgs.get_Reason()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.WasCleanGet">
            <summary>Sets the shim of CloseEventArgs.get_WasClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimCloseEventArgs.WasCleanSetBoolean">
            <summary>Sets the shim of CloseEventArgs.set_WasClean(Boolean value)</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimErrorEventArgs">
            <summary>Shim type of WebSocketSharp.ErrorEventArgs</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimErrorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimErrorEventArgs.#ctor(WebSocketSharp.ErrorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.AllInstances.MessageGet">
            <summary>Sets the shim of ErrorEventArgs.get_Message()</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.ConstructorString">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.ConstructorStringException">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.ExceptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Exception()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimErrorEventArgs.MessageGet">
            <summary>Sets the shim of ErrorEventArgs.get_Message()</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimExt">
            <summary>Shim type of WebSocketSharp.Ext</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.AppendUInt16String">
            <summary>Sets the shim of Ext.Append(UInt16 code, String reason)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CheckIfAvailableWebSocketStateBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Ext.CheckIfAvailable(WebSocketState state, Boolean connecting, Boolean open, Boolean closing, Boolean closed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CheckIfValidProtocolsStringArray">
            <summary>Sets the shim of Ext.CheckIfValidProtocols(String[] protocols)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CheckIfValidSessionIDString">
            <summary>Sets the shim of Ext.CheckIfValidSessionID(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CheckWaitTimeTimeSpanStringOut">
            <summary>Sets the shim of Ext.CheckWaitTime(TimeSpan time, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CloseHttpListenerResponseHttpStatusCode">
            <summary>Sets the shim of Ext.Close(HttpListenerResponse response, HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CloseWithAuthChallengeHttpListenerResponseString">
            <summary>Sets the shim of Ext.CloseWithAuthChallenge(HttpListenerResponse response, String challenge)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CompressByteArrayCompressionMethod">
            <summary>Sets the shim of Ext.Compress(Byte[] data, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CompressStreamCompressionMethod">
            <summary>Sets the shim of Ext.Compress(Stream stream, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CompressToArrayStreamCompressionMethod">
            <summary>Sets the shim of Ext.CompressToArray(Stream stream, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ContainsNameValueCollectionString">
            <summary>Sets the shim of Ext.Contains(NameValueCollection collection, String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ContainsNameValueCollectionStringString">
            <summary>Sets the shim of Ext.Contains(NameValueCollection collection, String name, String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.ContainsOf1IEnumerableOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean})">
            <summary>Sets the shim of Ext.Contains(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; condition)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ContainsStringCharArray">
            <summary>Sets the shim of Ext.Contains(String value, Char[] chars)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ContainsTwiceStringArray">
            <summary>Sets the shim of Ext.ContainsTwice(String[] values)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.CopyOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,``0[]})">
            <summary>Sets the shim of Ext.Copy(!!0[] source, Int32 length)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.CopyOf1M0ArrayInt64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int64,``0[]})">
            <summary>Sets the shim of Ext.Copy(!!0[] source, Int64 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CopyToAsyncStreamStreamInt32ActionActionOfException">
            <summary>Sets the shim of Ext.CopyToAsync(Stream source, Stream destination, Int32 bufferLength, Action completed, Action`1&lt;Exception&gt; error)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.CopyToStreamStreamInt32">
            <summary>Sets the shim of Ext.CopyTo(Stream source, Stream destination, Int32 bufferLength)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.DecompressByteArrayCompressionMethod">
            <summary>Sets the shim of Ext.Decompress(Byte[] data, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.DecompressStreamCompressionMethod">
            <summary>Sets the shim of Ext.Decompress(Stream stream, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.DecompressToArrayStreamCompressionMethod">
            <summary>Sets the shim of Ext.DecompressToArray(Stream stream, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.EmitEventHandlerObjectEventArgs">
            <summary>Sets the shim of Ext.Emit(EventHandler eventHandler, Object sender, EventArgs e)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.EmitOf1EventHandlerOfM0ObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.EventHandler{``0},System.Object,``0})">
            <summary>Sets the shim of Ext.Emit(EventHandler`1&lt;!!0&gt; eventHandler, Object sender, !!0 e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.EqualsWithInt32CharActionOfInt32">
            <summary>Sets the shim of Ext.EqualsWith(Int32 value, Char c, Action`1&lt;Int32&gt; action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetAbsolutePathUri">
            <summary>Sets the shim of Ext.GetAbsolutePath(Uri uri)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetCookiesNameValueCollectionBoolean">
            <summary>Sets the shim of Ext.GetCookies(NameValueCollection headers, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetDescriptionHttpStatusCode">
            <summary>Sets the shim of Ext.GetDescription(HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetDnsSafeHostUriBoolean">
            <summary>Sets the shim of Ext.GetDnsSafeHost(Uri uri, Boolean bracketIPv6)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetMessageCloseStatusCode">
            <summary>Sets the shim of Ext.GetMessage(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetNameStringChar">
            <summary>Sets the shim of Ext.GetName(String nameAndValue, Char separator)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetStatusDescriptionInt32">
            <summary>Sets the shim of Ext.GetStatusDescription(Int32 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetValueStringChar">
            <summary>Sets the shim of Ext.GetValue(String nameAndValue, Char separator)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.GetValueStringCharBoolean">
            <summary>Sets the shim of Ext.GetValue(String nameAndValue, Char separator, Boolean unquote)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.InternalToByteArrayUInt16ByteOrder">
            <summary>Sets the shim of Ext.InternalToByteArray(UInt16 value, ByteOrder order)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.InternalToByteArrayUInt64ByteOrder">
            <summary>Sets the shim of Ext.InternalToByteArray(UInt64 value, ByteOrder order)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsCloseStatusCodeUInt16">
            <summary>Sets the shim of Ext.IsCloseStatusCode(UInt16 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsCompressionExtensionStringCompressionMethod">
            <summary>Sets the shim of Ext.IsCompressionExtension(String value, CompressionMethod method)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsControlByte">
            <summary>Sets the shim of Ext.IsControl(Byte opcode)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsDataByte">
            <summary>Sets the shim of Ext.IsData(Byte opcode)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsEnclosedInStringChar">
            <summary>Sets the shim of Ext.IsEnclosedIn(String value, Char c)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsHostOrderByteOrder">
            <summary>Sets the shim of Ext.IsHostOrder(ByteOrder order)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsLocalIPAddress">
            <summary>Sets the shim of Ext.IsLocal(IPAddress address)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsNullOrEmptyString">
            <summary>Sets the shim of Ext.IsNullOrEmpty(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsPortNumberInt32">
            <summary>Sets the shim of Ext.IsPortNumber(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsPredefinedSchemeString">
            <summary>Sets the shim of Ext.IsPredefinedScheme(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsReservedCloseStatusCode">
            <summary>Sets the shim of Ext.IsReserved(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsReservedUInt16">
            <summary>Sets the shim of Ext.IsReserved(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsSupportedByte">
            <summary>Sets the shim of Ext.IsSupported(Byte opcode)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsTextString">
            <summary>Sets the shim of Ext.IsText(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsTokenString">
            <summary>Sets the shim of Ext.IsToken(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.IsUpgradeToHttpListenerRequestString">
            <summary>Sets the shim of Ext.IsUpgradeTo(HttpListenerRequest request, String protocol)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.MaybeUriString">
            <summary>Sets the shim of Ext.MaybeUri(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.QuoteString">
            <summary>Sets the shim of Ext.Quote(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ReadBytesAsyncStreamInt32ActionOfByteArrayActionOfException">
            <summary>Sets the shim of Ext.ReadBytesAsync(Stream stream, Int32 length, Action`1&lt;Byte[]&gt; completed, Action`1&lt;Exception&gt; error)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ReadBytesAsyncStreamInt64Int32ActionOfByteArrayActionOfException">
            <summary>Sets the shim of Ext.ReadBytesAsync(Stream stream, Int64 length, Int32 bufferLength, Action`1&lt;Byte[]&gt; completed, Action`1&lt;Exception&gt; error)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ReadBytesStreamInt32">
            <summary>Sets the shim of Ext.ReadBytes(Stream stream, Int32 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ReadBytesStreamInt64Int32">
            <summary>Sets the shim of Ext.ReadBytes(Stream stream, Int64 length, Int32 bufferLength)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.RemovePrefixStringStringArray">
            <summary>Sets the shim of Ext.RemovePrefix(String value, String[] prefixes)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.ReverseOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[]})">
            <summary>Sets the shim of Ext.Reverse(!!0[] array)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.SplitHeaderValueStringCharArray">
            <summary>Sets the shim of Ext.SplitHeaderValue(String value, Char[] separators)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.StaticConstructor">
            <summary>Sets the shim of Ext.Ext()</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.SubArrayOf1M0ArrayInt32Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Int32,``0[]})">
            <summary>Sets the shim of Ext.SubArray(!!0[] array, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.SubArrayOf1M0ArrayInt64Int64``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int64,System.Int64,``0[]})">
            <summary>Sets the shim of Ext.SubArray(!!0[] array, Int64 startIndex, Int64 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesInt32Action">
            <summary>Sets the shim of Ext.Times(Int32 n, Action action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesInt32ActionOfInt32">
            <summary>Sets the shim of Ext.Times(Int32 n, Action`1&lt;Int32&gt; action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesInt64Action">
            <summary>Sets the shim of Ext.Times(Int64 n, Action action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesInt64ActionOfInt64">
            <summary>Sets the shim of Ext.Times(Int64 n, Action`1&lt;Int64&gt; action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesUInt32Action">
            <summary>Sets the shim of Ext.Times(UInt32 n, Action action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesUInt32ActionOfUInt32">
            <summary>Sets the shim of Ext.Times(UInt32 n, Action`1&lt;UInt32&gt; action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesUInt64Action">
            <summary>Sets the shim of Ext.Times(UInt64 n, Action action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TimesUInt64ActionOfUInt64">
            <summary>Sets the shim of Ext.Times(UInt64 n, Action`1&lt;UInt64&gt; action)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToByteArrayStream">
            <summary>Sets the shim of Ext.ToByteArray(Stream stream)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToCompressionMethodString">
            <summary>Sets the shim of Ext.ToCompressionMethod(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToExtensionStringCompressionMethodStringArray">
            <summary>Sets the shim of Ext.ToExtensionString(CompressionMethod method, String[] parameters)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToHostOrderByteArrayByteOrder">
            <summary>Sets the shim of Ext.ToHostOrder(Byte[] source, ByteOrder sourceOrder)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToIPAddressString">
            <summary>Sets the shim of Ext.ToIPAddress(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.ToListOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of Ext.ToList(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToStringIPAddressBoolean">
            <summary>Sets the shim of Ext.ToString(IPAddress address, Boolean bracketIPv6)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimExt.ToStringOf1M0ArrayString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.String,System.String})">
            <summary>Sets the shim of Ext.ToString(!!0[] array, String separator)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToUInt16ByteArrayByteOrder">
            <summary>Sets the shim of Ext.ToUInt16(Byte[] source, ByteOrder sourceOrder)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToUInt64ByteArrayByteOrder">
            <summary>Sets the shim of Ext.ToUInt64(Byte[] source, ByteOrder sourceOrder)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.ToUriString">
            <summary>Sets the shim of Ext.ToUri(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TrimSlashFromEndString">
            <summary>Sets the shim of Ext.TrimSlashFromEnd(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TrimSlashOrBackslashFromEndString">
            <summary>Sets the shim of Ext.TrimSlashOrBackslashFromEnd(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TryCreateWebSocketUriStringUriOutStringOut">
            <summary>Sets the shim of Ext.TryCreateWebSocketUri(String uriString, Uri&amp; result, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TryGetUTF8DecodedStringByteArrayStringOut">
            <summary>Sets the shim of Ext.TryGetUTF8DecodedString(Byte[] bytes, String&amp; s)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TryGetUTF8EncodedBytesStringByteArrayOut">
            <summary>Sets the shim of Ext.TryGetUTF8EncodedBytes(String s, Byte[]&amp; bytes)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.TryOpenReadFileInfoFileStreamOut">
            <summary>Sets the shim of Ext.TryOpenRead(FileInfo fileInfo, FileStream&amp; fileStream)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.UTF8DecodeByteArray">
            <summary>Sets the shim of Ext.UTF8Decode(Byte[] bytes)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.UTF8EncodeString">
            <summary>Sets the shim of Ext.UTF8Encode(String s)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.UnquoteString">
            <summary>Sets the shim of Ext.Unquote(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.UrlDecodeString">
            <summary>Sets the shim of Ext.UrlDecode(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.UrlEncodeString">
            <summary>Sets the shim of Ext.UrlEncode(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.WriteBytesAsyncStreamByteArrayInt32ActionActionOfException">
            <summary>Sets the shim of Ext.WriteBytesAsync(Stream stream, Byte[] bytes, Int32 bufferLength, Action completed, Action`1&lt;Exception&gt; error)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.WriteBytesStreamByteArrayInt32">
            <summary>Sets the shim of Ext.WriteBytes(Stream stream, Byte[] bytes, Int32 bufferLength)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.WriteContentHttpListenerResponseByteArray">
            <summary>Sets the shim of Ext.WriteContent(HttpListenerResponse response, Byte[] content)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.compressByteArray">
            <summary>Sets the shim of Ext.compress(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.compressToArrayStream">
            <summary>Sets the shim of Ext.compressToArray(Stream stream)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.decompressByteArray">
            <summary>Sets the shim of Ext.decompress(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.decompressToArrayStream">
            <summary>Sets the shim of Ext.decompressToArray(Stream stream)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimExt.timesUInt64Action">
            <summary>Sets the shim of Ext.times(UInt64 n, Action action)</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimLogData">
            <summary>Shim type of WebSocketSharp.LogData</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogData.#ctor(WebSocketSharp.LogData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimLogData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.AllInstances.CallerGet">
            <summary>Sets the shim of LogData.get_Caller()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.AllInstances.DateGet">
            <summary>Sets the shim of LogData.get_Date()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.AllInstances.LevelGet">
            <summary>Sets the shim of LogData.get_Level()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.AllInstances.MessageGet">
            <summary>Sets the shim of LogData.get_Message()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.AllInstances.ToString01">
            <summary>Sets the shim of LogData.ToString()</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.CallerGet">
            <summary>Sets the shim of LogData.get_Caller()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.ConstructorLogLevelStackFrameString">
            <summary>Sets the shim of LogData.LogData(LogLevel level, StackFrame caller, String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.DateGet">
            <summary>Sets the shim of LogData.get_Date()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.LevelGet">
            <summary>Sets the shim of LogData.get_Level()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.MessageGet">
            <summary>Sets the shim of LogData.get_Message()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogData.ToString">
            <summary>Sets the shim of LogData.ToString()</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimLogger">
            <summary>Shim type of WebSocketSharp.Logger</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogger.#ctor(WebSocketSharp.Logger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.DebugString">
            <summary>Sets the shim of Logger.Debug(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.ErrorString">
            <summary>Sets the shim of Logger.Error(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.FatalString">
            <summary>Sets the shim of Logger.Fatal(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.FileGet">
            <summary>Sets the shim of Logger.get_File()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.FileSetString">
            <summary>Sets the shim of Logger.set_File(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.InfoString">
            <summary>Sets the shim of Logger.Info(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.LevelGet">
            <summary>Sets the shim of Logger.get_Level()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.LevelSetLogLevel">
            <summary>Sets the shim of Logger.set_Level(LogLevel value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.OutputGet">
            <summary>Sets the shim of Logger.get_Output()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.OutputSetActionOfLogDataString">
            <summary>Sets the shim of Logger.set_Output(Action`2&lt;LogData,String&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.TraceString">
            <summary>Sets the shim of Logger.Trace(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.WarnString">
            <summary>Sets the shim of Logger.Warn(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.AllInstances.outputStringLogLevel">
            <summary>Sets the shim of Logger.output(String message, LogLevel level)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.Constructor">
            <summary>Sets the shim of Logger.Logger()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.ConstructorLogLevel">
            <summary>Sets the shim of Logger.Logger(LogLevel level)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.ConstructorLogLevelStringActionOfLogDataString">
            <summary>Sets the shim of Logger.Logger(LogLevel level, String file, Action`2&lt;LogData,String&gt; output)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.DebugString">
            <summary>Sets the shim of Logger.Debug(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.ErrorString">
            <summary>Sets the shim of Logger.Error(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.FatalString">
            <summary>Sets the shim of Logger.Fatal(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.FileGet">
            <summary>Sets the shim of Logger.get_File()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.FileSetString">
            <summary>Sets the shim of Logger.set_File(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.InfoString">
            <summary>Sets the shim of Logger.Info(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.LevelGet">
            <summary>Sets the shim of Logger.get_Level()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.LevelSetLogLevel">
            <summary>Sets the shim of Logger.set_Level(LogLevel value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.OutputGet">
            <summary>Sets the shim of Logger.get_Output()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.OutputSetActionOfLogDataString">
            <summary>Sets the shim of Logger.set_Output(Action`2&lt;LogData,String&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.TraceString">
            <summary>Sets the shim of Logger.Trace(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.WarnString">
            <summary>Sets the shim of Logger.Warn(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.defaultOutputLogDataString">
            <summary>Sets the shim of Logger.defaultOutput(LogData data, String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.outputStringLogLevel">
            <summary>Sets the shim of Logger.output(String message, LogLevel level)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimLogger.writeToFileStringString">
            <summary>Sets the shim of Logger.writeToFile(String value, String path)</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimMessageEventArgs">
            <summary>Shim type of WebSocketSharp.MessageEventArgs</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimMessageEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimMessageEventArgs.#ctor(WebSocketSharp.MessageEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of MessageEventArgs.get_Data()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.IsBinaryGet">
            <summary>Sets the shim of MessageEventArgs.get_IsBinary()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.IsPingGet">
            <summary>Sets the shim of MessageEventArgs.get_IsPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.IsTextGet">
            <summary>Sets the shim of MessageEventArgs.get_IsText()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.RawDataGet">
            <summary>Sets the shim of MessageEventArgs.get_RawData()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.AllInstances.setData">
            <summary>Sets the shim of MessageEventArgs.setData()</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimMessageEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimMessageEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.DataGet">
            <summary>Sets the shim of MessageEventArgs.get_Data()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.IsBinaryGet">
            <summary>Sets the shim of MessageEventArgs.get_IsBinary()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.IsPingGet">
            <summary>Sets the shim of MessageEventArgs.get_IsPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.IsTextGet">
            <summary>Sets the shim of MessageEventArgs.get_IsText()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.RawDataGet">
            <summary>Sets the shim of MessageEventArgs.get_RawData()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimMessageEventArgs.setData">
            <summary>Sets the shim of MessageEventArgs.setData()</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimWebSocket">
            <summary>Shim type of WebSocketSharp.WebSocket</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocket.#ctor(WebSocketSharp.WebSocket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.Accept">
            <summary>Sets the shim of WebSocket.Accept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AcceptAsync">
            <summary>Sets the shim of WebSocket.AcceptAsync()</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimWebSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.Accept">
            <summary>Sets the shim of WebSocket.Accept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.AcceptAsync">
            <summary>Sets the shim of WebSocket.AcceptAsync()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.Close">
            <summary>Sets the shim of WebSocket.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseAsync">
            <summary>Sets the shim of WebSocket.CloseAsync()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseAsyncCloseStatusCode">
            <summary>Sets the shim of WebSocket.CloseAsync(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseAsyncCloseStatusCodeString">
            <summary>Sets the shim of WebSocket.CloseAsync(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseAsyncUInt16">
            <summary>Sets the shim of WebSocket.CloseAsync(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseAsyncUInt16String">
            <summary>Sets the shim of WebSocket.CloseAsync(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseCloseStatusCode">
            <summary>Sets the shim of WebSocket.Close(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseCloseStatusCodeString">
            <summary>Sets the shim of WebSocket.Close(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseHttpStatusCode">
            <summary>Sets the shim of WebSocket.Close(HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseUInt16">
            <summary>Sets the shim of WebSocket.Close(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CloseUInt16String">
            <summary>Sets the shim of WebSocket.Close(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CompressionGet">
            <summary>Sets the shim of WebSocket.get_Compression()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CompressionSetCompressionMethod">
            <summary>Sets the shim of WebSocket.set_Compression(CompressionMethod value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.Connect">
            <summary>Sets the shim of WebSocket.Connect()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.ConnectAsync">
            <summary>Sets the shim of WebSocket.ConnectAsync()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CookieCollectionGet">
            <summary>Sets the shim of WebSocket.get_CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CookiesGet">
            <summary>Sets the shim of WebSocket.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CredentialsGet">
            <summary>Sets the shim of WebSocket.get_Credentials()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CustomHandshakeRequestCheckerGet">
            <summary>Sets the shim of WebSocket.get_CustomHandshakeRequestChecker()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.CustomHandshakeRequestCheckerSetFuncOfWebSocketContextString">
            <summary>Sets the shim of WebSocket.set_CustomHandshakeRequestChecker(Func`2&lt;WebSocketContext,String&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.EmitOnPingGet">
            <summary>Sets the shim of WebSocket.get_EmitOnPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.EmitOnPingSetBoolean">
            <summary>Sets the shim of WebSocket.set_EmitOnPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.EnableRedirectionGet">
            <summary>Sets the shim of WebSocket.get_EnableRedirection()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.EnableRedirectionSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableRedirection(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.ExtensionsGet">
            <summary>Sets the shim of WebSocket.get_Extensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.HasMessageGet">
            <summary>Sets the shim of WebSocket.get_HasMessage()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.IgnoreExtensionsGet">
            <summary>Sets the shim of WebSocket.get_IgnoreExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.IgnoreExtensionsSetBoolean">
            <summary>Sets the shim of WebSocket.set_IgnoreExtensions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.InternalAccept">
            <summary>Sets the shim of WebSocket.InternalAccept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.IsAliveGet">
            <summary>Sets the shim of WebSocket.get_IsAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.IsConnectedGet">
            <summary>Sets the shim of WebSocket.get_IsConnected()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.IsSecureGet">
            <summary>Sets the shim of WebSocket.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.LogGet">
            <summary>Sets the shim of WebSocket.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.LogSetLogger">
            <summary>Sets the shim of WebSocket.set_Log(Logger value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnCloseAddEventHandlerOfCloseEventArgs">
            <summary>Sets the shim of WebSocket.add_OnClose(EventHandler`1&lt;CloseEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnCloseRemoveEventHandlerOfCloseEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnClose(EventHandler`1&lt;CloseEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.add_OnError(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnError(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnMessageAddEventHandlerOfMessageEventArgs">
            <summary>Sets the shim of WebSocket.add_OnMessage(EventHandler`1&lt;MessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnMessageRemoveEventHandlerOfMessageEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnMessage(EventHandler`1&lt;MessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnOpenAddEventHandler">
            <summary>Sets the shim of WebSocket.add_OnOpen(EventHandler value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OnOpenRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnOpen(EventHandler value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OriginGet">
            <summary>Sets the shim of WebSocket.get_Origin()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.OriginSetString">
            <summary>Sets the shim of WebSocket.set_Origin(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.Ping">
            <summary>Sets the shim of WebSocket.Ping()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.PingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocket.Ping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.PingString">
            <summary>Sets the shim of WebSocket.Ping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.ProtocolGet">
            <summary>Sets the shim of WebSocket.get_Protocol()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.ProtocolSetString">
            <summary>Sets the shim of WebSocket.set_Protocol(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.ReadyStateGet">
            <summary>Sets the shim of WebSocket.get_ReadyState()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendAsyncByteArrayActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(Byte[] data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendAsyncFileInfoActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(FileInfo fileInfo, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendAsyncStreamInt32ActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(Stream stream, Int32 length, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendAsyncStringActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(String data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendByteArray">
            <summary>Sets the shim of WebSocket.Send(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendFileInfo">
            <summary>Sets the shim of WebSocket.Send(FileInfo fileInfo)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendStreamInt32">
            <summary>Sets the shim of WebSocket.Send(Stream stream, Int32 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SendString">
            <summary>Sets the shim of WebSocket.Send(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SetCookieCookie">
            <summary>Sets the shim of WebSocket.SetCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SetCredentialsStringStringBoolean">
            <summary>Sets the shim of WebSocket.SetCredentials(String username, String password, Boolean preAuth)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SetProxyStringStringString">
            <summary>Sets the shim of WebSocket.SetProxy(String url, String username, String password)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SslConfigurationGet">
            <summary>Sets the shim of WebSocket.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SslConfigurationSetClientSslConfiguration">
            <summary>Sets the shim of WebSocket.set_SslConfiguration(ClientSslConfiguration value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of WebSocket.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.UrlGet">
            <summary>Sets the shim of WebSocket.get_Url()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.WaitTimeGet">
            <summary>Sets the shim of WebSocket.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocket.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances._openb__148_0IAsyncResult">
            <summary>Sets the shim of WebSocket.&lt;open&gt;b__148_0(IAsyncResult ar)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances._processSecWebSocketProtocolHeaderb__159_0String">
            <summary>Sets the shim of WebSocket.&lt;processSecWebSocketProtocolHeader&gt;b__159_0(String p)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances._startReceivingb__175_2Exception">
            <summary>Sets the shim of WebSocket.&lt;startReceiving&gt;b__175_2(Exception ex)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.accept">
            <summary>Sets the shim of WebSocket.accept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.acceptHandshake">
            <summary>Sets the shim of WebSocket.acceptHandshake()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.checkHandshakeRequestWebSocketContextStringOut">
            <summary>Sets the shim of WebSocket.checkHandshakeRequest(WebSocketContext context, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.checkIfAvailableBooleanBooleanBooleanBooleanBooleanBooleanStringOut">
            <summary>Sets the shim of WebSocket.checkIfAvailable(Boolean client, Boolean server, Boolean connecting, Boolean open, Boolean closing, Boolean closed, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.checkIfAvailableBooleanBooleanBooleanBooleanStringOut">
            <summary>Sets the shim of WebSocket.checkIfAvailable(Boolean connecting, Boolean open, Boolean closing, Boolean closed, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.closeAsyncUInt16String">
            <summary>Sets the shim of WebSocket.closeAsync(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.closeHandshakeByteArrayBooleanBoolean">
            <summary>Sets the shim of WebSocket.closeHandshake(Byte[] frameAsBytes, Boolean receive, Boolean received)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.closeUInt16String">
            <summary>Sets the shim of WebSocket.close(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.connect">
            <summary>Sets the shim of WebSocket.connect()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.createExtensions">
            <summary>Sets the shim of WebSocket.createExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.customCheckHandshakeRequestWebSocketContextStringOut">
            <summary>Sets the shim of WebSocket.customCheckHandshakeRequest(WebSocketContext context, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.dequeueFromMessageEventQueue">
            <summary>Sets the shim of WebSocket.dequeueFromMessageEventQueue()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.doHandshake">
            <summary>Sets the shim of WebSocket.doHandshake()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.enqueueToMessageEventQueueMessageEventArgs">
            <summary>Sets the shim of WebSocket.enqueueToMessageEventQueue(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.errorStringException">
            <summary>Sets the shim of WebSocket.error(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.fatalStringCloseStatusCode">
            <summary>Sets the shim of WebSocket.fatal(String message, CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.fatalStringException">
            <summary>Sets the shim of WebSocket.fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.fatalStringUInt16">
            <summary>Sets the shim of WebSocket.fatal(String message, UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.init">
            <summary>Sets the shim of WebSocket.init()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.message">
            <summary>Sets the shim of WebSocket.message()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.messagecMessageEventArgs">
            <summary>Sets the shim of WebSocket.messagec(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.messagesMessageEventArgs">
            <summary>Sets the shim of WebSocket.messages(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.open">
            <summary>Sets the shim of WebSocket.open()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.pingByteArray">
            <summary>Sets the shim of WebSocket.ping(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.processCookiesCookieCollection">
            <summary>Sets the shim of WebSocket.processCookies(CookieCollection cookies)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.processSecWebSocketExtensionsClientHeaderString">
            <summary>Sets the shim of WebSocket.processSecWebSocketExtensionsClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.processSecWebSocketExtensionsServerHeaderString">
            <summary>Sets the shim of WebSocket.processSecWebSocketExtensionsServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.processSecWebSocketProtocolHeaderIEnumerableOfString">
            <summary>Sets the shim of WebSocket.processSecWebSocketProtocolHeader(IEnumerable`1&lt;String&gt; values)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.releaseClientResources">
            <summary>Sets the shim of WebSocket.releaseClientResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.releaseCommonResources">
            <summary>Sets the shim of WebSocket.releaseCommonResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.releaseResources">
            <summary>Sets the shim of WebSocket.releaseResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.releaseServerResources">
            <summary>Sets the shim of WebSocket.releaseServerResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.sendBytesByteArray">
            <summary>Sets the shim of WebSocket.sendBytes(Byte[] bytes)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.sendProxyConnectRequest">
            <summary>Sets the shim of WebSocket.sendProxyConnectRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.setClientStream">
            <summary>Sets the shim of WebSocket.setClientStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.startReceiving">
            <summary>Sets the shim of WebSocket.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketAcceptHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketAcceptHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketExtensionsClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketExtensionsClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketExtensionsServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketExtensionsServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketKeyHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketKeyHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketProtocolClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketProtocolClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketProtocolServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketProtocolServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketVersionClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketVersionClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.AllInstances.validateSecWebSocketVersionServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketVersionServerHeader(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocket.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckParametersForCloseCloseStatusCodeStringBooleanStringOut">
            <summary>Sets the shim of WebSocket.CheckParametersForClose(CloseStatusCode code, String reason, Boolean client, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckParametersForCloseUInt16StringBooleanStringOut">
            <summary>Sets the shim of WebSocket.CheckParametersForClose(UInt16 code, String reason, Boolean client, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckPingParameterStringByteArrayOut">
            <summary>Sets the shim of WebSocket.CheckPingParameter(String message, Byte[]&amp; bytes)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckSendParameterByteArray">
            <summary>Sets the shim of WebSocket.CheckSendParameter(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckSendParameterFileInfo">
            <summary>Sets the shim of WebSocket.CheckSendParameter(FileInfo file)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckSendParameterString">
            <summary>Sets the shim of WebSocket.CheckSendParameter(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CheckSendParametersStreamInt32">
            <summary>Sets the shim of WebSocket.CheckSendParameters(Stream stream, Int32 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.Close">
            <summary>Sets the shim of WebSocket.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseAsync">
            <summary>Sets the shim of WebSocket.CloseAsync()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseAsyncCloseStatusCode">
            <summary>Sets the shim of WebSocket.CloseAsync(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseAsyncCloseStatusCodeString">
            <summary>Sets the shim of WebSocket.CloseAsync(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseAsyncUInt16">
            <summary>Sets the shim of WebSocket.CloseAsync(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseAsyncUInt16String">
            <summary>Sets the shim of WebSocket.CloseAsync(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseCloseStatusCode">
            <summary>Sets the shim of WebSocket.Close(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseCloseStatusCodeString">
            <summary>Sets the shim of WebSocket.Close(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseHttpStatusCode">
            <summary>Sets the shim of WebSocket.Close(HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseUInt16">
            <summary>Sets the shim of WebSocket.Close(UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CloseUInt16String">
            <summary>Sets the shim of WebSocket.Close(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CompressionGet">
            <summary>Sets the shim of WebSocket.get_Compression()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CompressionSetCompressionMethod">
            <summary>Sets the shim of WebSocket.set_Compression(CompressionMethod value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.Connect">
            <summary>Sets the shim of WebSocket.Connect()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ConnectAsync">
            <summary>Sets the shim of WebSocket.ConnectAsync()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ConstructorHttpListenerWebSocketContextString">
            <summary>Sets the shim of WebSocket.WebSocket(HttpListenerWebSocketContext context, String protocol)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ConstructorStringStringArray">
            <summary>Sets the shim of WebSocket.WebSocket(String url, String[] protocols)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CookieCollectionGet">
            <summary>Sets the shim of WebSocket.get_CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CookiesGet">
            <summary>Sets the shim of WebSocket.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CreateBase64Key">
            <summary>Sets the shim of WebSocket.CreateBase64Key()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CreateResponseKeyString">
            <summary>Sets the shim of WebSocket.CreateResponseKey(String base64Key)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CredentialsGet">
            <summary>Sets the shim of WebSocket.get_Credentials()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CustomHandshakeRequestCheckerGet">
            <summary>Sets the shim of WebSocket.get_CustomHandshakeRequestChecker()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.CustomHandshakeRequestCheckerSetFuncOfWebSocketContextString">
            <summary>Sets the shim of WebSocket.set_CustomHandshakeRequestChecker(Func`2&lt;WebSocketContext,String&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.EmitOnPingGet">
            <summary>Sets the shim of WebSocket.get_EmitOnPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.EmitOnPingSetBoolean">
            <summary>Sets the shim of WebSocket.set_EmitOnPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.EnableRedirectionGet">
            <summary>Sets the shim of WebSocket.get_EnableRedirection()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.EnableRedirectionSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableRedirection(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ExtensionsGet">
            <summary>Sets the shim of WebSocket.get_Extensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.HasMessageGet">
            <summary>Sets the shim of WebSocket.get_HasMessage()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.IgnoreExtensionsGet">
            <summary>Sets the shim of WebSocket.get_IgnoreExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.IgnoreExtensionsSetBoolean">
            <summary>Sets the shim of WebSocket.set_IgnoreExtensions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.InternalAccept">
            <summary>Sets the shim of WebSocket.InternalAccept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.IsAliveGet">
            <summary>Sets the shim of WebSocket.get_IsAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.IsConnectedGet">
            <summary>Sets the shim of WebSocket.get_IsConnected()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.IsSecureGet">
            <summary>Sets the shim of WebSocket.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.LogGet">
            <summary>Sets the shim of WebSocket.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.LogSetLogger">
            <summary>Sets the shim of WebSocket.set_Log(Logger value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnCloseAddEventHandlerOfCloseEventArgs">
            <summary>Sets the shim of WebSocket.add_OnClose(EventHandler`1&lt;CloseEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnCloseRemoveEventHandlerOfCloseEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnClose(EventHandler`1&lt;CloseEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnErrorAddEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.add_OnError(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnErrorRemoveEventHandlerOfErrorEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnError(EventHandler`1&lt;ErrorEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnMessageAddEventHandlerOfMessageEventArgs">
            <summary>Sets the shim of WebSocket.add_OnMessage(EventHandler`1&lt;MessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnMessageRemoveEventHandlerOfMessageEventArgs">
            <summary>Sets the shim of WebSocket.remove_OnMessage(EventHandler`1&lt;MessageEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnOpenAddEventHandler">
            <summary>Sets the shim of WebSocket.add_OnOpen(EventHandler value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OnOpenRemoveEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnOpen(EventHandler value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OriginGet">
            <summary>Sets the shim of WebSocket.get_Origin()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.OriginSetString">
            <summary>Sets the shim of WebSocket.set_Origin(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.Ping">
            <summary>Sets the shim of WebSocket.Ping()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.PingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocket.Ping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.PingString">
            <summary>Sets the shim of WebSocket.Ping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ProtocolGet">
            <summary>Sets the shim of WebSocket.get_Protocol()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ProtocolSetString">
            <summary>Sets the shim of WebSocket.set_Protocol(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.ReadyStateGet">
            <summary>Sets the shim of WebSocket.get_ReadyState()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendAsyncByteArrayActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(Byte[] data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendAsyncFileInfoActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(FileInfo fileInfo, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendAsyncStreamInt32ActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(Stream stream, Int32 length, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendAsyncStringActionOfBoolean">
            <summary>Sets the shim of WebSocket.SendAsync(String data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendByteArray">
            <summary>Sets the shim of WebSocket.Send(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendFileInfo">
            <summary>Sets the shim of WebSocket.Send(FileInfo fileInfo)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendStreamInt32">
            <summary>Sets the shim of WebSocket.Send(Stream stream, Int32 length)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SendString">
            <summary>Sets the shim of WebSocket.Send(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SetCookieCookie">
            <summary>Sets the shim of WebSocket.SetCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SetCredentialsStringStringBoolean">
            <summary>Sets the shim of WebSocket.SetCredentials(String username, String password, Boolean preAuth)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SetProxyStringStringString">
            <summary>Sets the shim of WebSocket.SetProxy(String url, String username, String password)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SslConfigurationGet">
            <summary>Sets the shim of WebSocket.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SslConfigurationSetClientSslConfiguration">
            <summary>Sets the shim of WebSocket.set_SslConfiguration(ClientSslConfiguration value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.StaticConstructor">
            <summary>Sets the shim of WebSocket.WebSocket()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.SystemIDisposableDispose">
            <summary>Sets the shim of WebSocket.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.UrlGet">
            <summary>Sets the shim of WebSocket.get_Url()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.WaitTimeGet">
            <summary>Sets the shim of WebSocket.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocket.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket._openb__148_0IAsyncResult">
            <summary>Sets the shim of WebSocket.&lt;open&gt;b__148_0(IAsyncResult ar)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket._processSecWebSocketProtocolHeaderb__159_0String">
            <summary>Sets the shim of WebSocket.&lt;processSecWebSocketProtocolHeader&gt;b__159_0(String p)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket._startReceivingb__175_2Exception">
            <summary>Sets the shim of WebSocket.&lt;startReceiving&gt;b__175_2(Exception ex)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.accept">
            <summary>Sets the shim of WebSocket.accept()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.acceptHandshake">
            <summary>Sets the shim of WebSocket.acceptHandshake()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.checkHandshakeRequestWebSocketContextStringOut">
            <summary>Sets the shim of WebSocket.checkHandshakeRequest(WebSocketContext context, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.checkIfAvailableBooleanBooleanBooleanBooleanBooleanBooleanStringOut">
            <summary>Sets the shim of WebSocket.checkIfAvailable(Boolean client, Boolean server, Boolean connecting, Boolean open, Boolean closing, Boolean closed, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.checkIfAvailableBooleanBooleanBooleanBooleanStringOut">
            <summary>Sets the shim of WebSocket.checkIfAvailable(Boolean connecting, Boolean open, Boolean closing, Boolean closed, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.checkParametersForSetCredentialsStringStringStringOut">
            <summary>Sets the shim of WebSocket.checkParametersForSetCredentials(String username, String password, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.checkParametersForSetProxyStringStringStringStringOut">
            <summary>Sets the shim of WebSocket.checkParametersForSetProxy(String url, String username, String password, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.closeAsyncUInt16String">
            <summary>Sets the shim of WebSocket.closeAsync(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.closeHandshakeByteArrayBooleanBoolean">
            <summary>Sets the shim of WebSocket.closeHandshake(Byte[] frameAsBytes, Boolean receive, Boolean received)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.closeUInt16String">
            <summary>Sets the shim of WebSocket.close(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.connect">
            <summary>Sets the shim of WebSocket.connect()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.createExtensions">
            <summary>Sets the shim of WebSocket.createExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.customCheckHandshakeRequestWebSocketContextStringOut">
            <summary>Sets the shim of WebSocket.customCheckHandshakeRequest(WebSocketContext context, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.dequeueFromMessageEventQueue">
            <summary>Sets the shim of WebSocket.dequeueFromMessageEventQueue()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.doHandshake">
            <summary>Sets the shim of WebSocket.doHandshake()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.enqueueToMessageEventQueueMessageEventArgs">
            <summary>Sets the shim of WebSocket.enqueueToMessageEventQueue(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.errorStringException">
            <summary>Sets the shim of WebSocket.error(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.fatalStringCloseStatusCode">
            <summary>Sets the shim of WebSocket.fatal(String message, CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.fatalStringException">
            <summary>Sets the shim of WebSocket.fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.fatalStringUInt16">
            <summary>Sets the shim of WebSocket.fatal(String message, UInt16 code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.init">
            <summary>Sets the shim of WebSocket.init()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.message">
            <summary>Sets the shim of WebSocket.message()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.messagecMessageEventArgs">
            <summary>Sets the shim of WebSocket.messagec(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.messagesMessageEventArgs">
            <summary>Sets the shim of WebSocket.messages(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.open">
            <summary>Sets the shim of WebSocket.open()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.pingByteArray">
            <summary>Sets the shim of WebSocket.ping(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.processCookiesCookieCollection">
            <summary>Sets the shim of WebSocket.processCookies(CookieCollection cookies)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.processSecWebSocketExtensionsClientHeaderString">
            <summary>Sets the shim of WebSocket.processSecWebSocketExtensionsClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.processSecWebSocketExtensionsServerHeaderString">
            <summary>Sets the shim of WebSocket.processSecWebSocketExtensionsServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.processSecWebSocketProtocolHeaderIEnumerableOfString">
            <summary>Sets the shim of WebSocket.processSecWebSocketProtocolHeader(IEnumerable`1&lt;String&gt; values)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.releaseClientResources">
            <summary>Sets the shim of WebSocket.releaseClientResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.releaseCommonResources">
            <summary>Sets the shim of WebSocket.releaseCommonResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.releaseResources">
            <summary>Sets the shim of WebSocket.releaseResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.releaseServerResources">
            <summary>Sets the shim of WebSocket.releaseServerResources()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.sendBytesByteArray">
            <summary>Sets the shim of WebSocket.sendBytes(Byte[] bytes)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.sendProxyConnectRequest">
            <summary>Sets the shim of WebSocket.sendProxyConnectRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.setClientStream">
            <summary>Sets the shim of WebSocket.setClientStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.startReceiving">
            <summary>Sets the shim of WebSocket.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketAcceptHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketAcceptHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketExtensionsClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketExtensionsClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketExtensionsServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketExtensionsServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketKeyHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketKeyHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketProtocolClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketProtocolClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketProtocolServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketProtocolServerHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketVersionClientHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketVersionClientHeader(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocket.validateSecWebSocketVersionServerHeaderString">
            <summary>Sets the shim of WebSocket.validateSecWebSocketVersionServerHeader(String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimWebSocketException">
            <summary>Shim type of WebSocketSharp.WebSocketException</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocketException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocketException.#ctor(WebSocketSharp.WebSocketException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.ShimWebSocketException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.AllInstances.CodeGet">
            <summary>Sets the shim of WebSocketException.get_Code()</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocketException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocketException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.ShimWebSocketException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.CodeGet">
            <summary>Sets the shim of WebSocketException.get_Code()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.Constructor">
            <summary>Sets the shim of WebSocketException.WebSocketException()</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorCloseStatusCode">
            <summary>Sets the shim of WebSocketException.WebSocketException(CloseStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorCloseStatusCodeException">
            <summary>Sets the shim of WebSocketException.WebSocketException(CloseStatusCode code, Exception innerException)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorCloseStatusCodeString">
            <summary>Sets the shim of WebSocketException.WebSocketException(CloseStatusCode code, String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorCloseStatusCodeStringException">
            <summary>Sets the shim of WebSocketException.WebSocketException(CloseStatusCode code, String message, Exception innerException)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorException">
            <summary>Sets the shim of WebSocketException.WebSocketException(Exception innerException)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorString">
            <summary>Sets the shim of WebSocketException.WebSocketException(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.ShimWebSocketException.ConstructorStringException">
            <summary>Sets the shim of WebSocketException.WebSocketException(String message, Exception innerException)</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.StubLogger">
            <summary>Stub type of WebSocketSharp.Logger</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubLogger.#ctor(WebSocketSharp.LogLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubLogger.#ctor(WebSocketSharp.LogLevel,System.String,System.Action{WebSocketSharp.LogData,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubLogger.InitializeStub">
            <summary>Initializes a new instance of type StubLogger</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Fakes.StubWebSocket">
            <summary>Stub type of WebSocketSharp.WebSocket</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubWebSocket.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubWebSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Fakes.StubWebSocket.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocket</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubWebSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Fakes.StubWebSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration">
            <summary>Shim type of WebSocketSharp.Net.ClientSslConfiguration</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.#ctor(WebSocketSharp.Net.ClientSslConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.CheckCertificateRevocationGet">
            <summary>Sets the shim of ClientSslConfiguration.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of ClientSslConfiguration.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ClientCertificateSelectionCallbackGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ClientCertificateSelectionCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ClientCertificateSelectionCallbackSetLocalCertificateSelectionCallback">
            <summary>Sets the shim of ClientSslConfiguration.set_ClientCertificateSelectionCallback(LocalCertificateSelectionCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ClientCertificatesGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ClientCertificates()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ClientCertificatesSetX509CertificateCollection">
            <summary>Sets the shim of ClientSslConfiguration.set_ClientCertificates(X509CertificateCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.EnabledSslProtocolsGet">
            <summary>Sets the shim of ClientSslConfiguration.get_EnabledSslProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.EnabledSslProtocolsSetSslProtocols">
            <summary>Sets the shim of ClientSslConfiguration.set_EnabledSslProtocols(SslProtocols value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ServerCertificateValidationCallbackGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ServerCertificateValidationCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.ServerCertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of ClientSslConfiguration.set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.TargetHostGet">
            <summary>Sets the shim of ClientSslConfiguration.get_TargetHost()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.AllInstances.TargetHostSetString">
            <summary>Sets the shim of ClientSslConfiguration.set_TargetHost(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.CheckCertificateRevocationGet">
            <summary>Sets the shim of ClientSslConfiguration.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of ClientSslConfiguration.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ClientCertificateSelectionCallbackGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ClientCertificateSelectionCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ClientCertificateSelectionCallbackSetLocalCertificateSelectionCallback">
            <summary>Sets the shim of ClientSslConfiguration.set_ClientCertificateSelectionCallback(LocalCertificateSelectionCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ClientCertificatesGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ClientCertificates()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ClientCertificatesSetX509CertificateCollection">
            <summary>Sets the shim of ClientSslConfiguration.set_ClientCertificates(X509CertificateCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.Constructor">
            <summary>Sets the shim of ClientSslConfiguration.ClientSslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ConstructorClientSslConfiguration">
            <summary>Sets the shim of ClientSslConfiguration.ClientSslConfiguration(ClientSslConfiguration configuration)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ConstructorString">
            <summary>Sets the shim of ClientSslConfiguration.ClientSslConfiguration(String targetHost)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.EnabledSslProtocolsGet">
            <summary>Sets the shim of ClientSslConfiguration.get_EnabledSslProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.EnabledSslProtocolsSetSslProtocols">
            <summary>Sets the shim of ClientSslConfiguration.set_EnabledSslProtocols(SslProtocols value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ServerCertificateValidationCallbackGet">
            <summary>Sets the shim of ClientSslConfiguration.get_ServerCertificateValidationCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.ServerCertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of ClientSslConfiguration.set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.TargetHostGet">
            <summary>Sets the shim of ClientSslConfiguration.get_TargetHost()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimClientSslConfiguration.TargetHostSetString">
            <summary>Sets the shim of ClientSslConfiguration.set_TargetHost(String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookie">
            <summary>Shim type of WebSocketSharp.Net.Cookie</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookie.#ctor(WebSocketSharp.Net.Cookie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.CommentGet">
            <summary>Sets the shim of Cookie.get_Comment()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.CommentSetString">
            <summary>Sets the shim of Cookie.set_Comment(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.CommentUriGet">
            <summary>Sets the shim of Cookie.get_CommentUri()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.CommentUriSetUri">
            <summary>Sets the shim of Cookie.set_CommentUri(Uri value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.DiscardGet">
            <summary>Sets the shim of Cookie.get_Discard()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.DiscardSetBoolean">
            <summary>Sets the shim of Cookie.set_Discard(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.DomainGet">
            <summary>Sets the shim of Cookie.get_Domain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.DomainSetString">
            <summary>Sets the shim of Cookie.set_Domain(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.EqualsObject">
            <summary>Sets the shim of Cookie.Equals(Object comparand)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExactDomainGet">
            <summary>Sets the shim of Cookie.get_ExactDomain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExactDomainSetBoolean">
            <summary>Sets the shim of Cookie.set_ExactDomain(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExpiredGet">
            <summary>Sets the shim of Cookie.get_Expired()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExpiredSetBoolean">
            <summary>Sets the shim of Cookie.set_Expired(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExpiresGet">
            <summary>Sets the shim of Cookie.get_Expires()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ExpiresSetDateTime">
            <summary>Sets the shim of Cookie.set_Expires(DateTime value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.GetHashCode01">
            <summary>Sets the shim of Cookie.GetHashCode()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.HttpOnlyGet">
            <summary>Sets the shim of Cookie.get_HttpOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.HttpOnlySetBoolean">
            <summary>Sets the shim of Cookie.set_HttpOnly(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.MaxAgeGet">
            <summary>Sets the shim of Cookie.get_MaxAge()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.NameGet">
            <summary>Sets the shim of Cookie.get_Name()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.NameSetString">
            <summary>Sets the shim of Cookie.set_Name(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.PathGet">
            <summary>Sets the shim of Cookie.get_Path()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.PathSetString">
            <summary>Sets the shim of Cookie.set_Path(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.PortGet">
            <summary>Sets the shim of Cookie.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.PortSetString">
            <summary>Sets the shim of Cookie.set_Port(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.PortsGet">
            <summary>Sets the shim of Cookie.get_Ports()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.SecureGet">
            <summary>Sets the shim of Cookie.get_Secure()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.SecureSetBoolean">
            <summary>Sets the shim of Cookie.set_Secure(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.TimeStampGet">
            <summary>Sets the shim of Cookie.get_TimeStamp()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ToRequestStringUri">
            <summary>Sets the shim of Cookie.ToRequestString(Uri uri)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ToResponseString">
            <summary>Sets the shim of Cookie.ToResponseString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ToString01">
            <summary>Sets the shim of Cookie.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ValueGet">
            <summary>Sets the shim of Cookie.get_Value()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.ValueSetString">
            <summary>Sets the shim of Cookie.set_Value(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.VersionGet">
            <summary>Sets the shim of Cookie.get_Version()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.VersionSetInt32">
            <summary>Sets the shim of Cookie.set_Version(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.toResponseStringVersion0">
            <summary>Sets the shim of Cookie.toResponseStringVersion0()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.AllInstances.toResponseStringVersion1">
            <summary>Sets the shim of Cookie.toResponseStringVersion1()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.CommentGet">
            <summary>Sets the shim of Cookie.get_Comment()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.CommentSetString">
            <summary>Sets the shim of Cookie.set_Comment(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.CommentUriGet">
            <summary>Sets the shim of Cookie.get_CommentUri()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.CommentUriSetUri">
            <summary>Sets the shim of Cookie.set_CommentUri(Uri value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.Constructor">
            <summary>Sets the shim of Cookie.Cookie()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ConstructorStringString">
            <summary>Sets the shim of Cookie.Cookie(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ConstructorStringStringString">
            <summary>Sets the shim of Cookie.Cookie(String name, String value, String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ConstructorStringStringStringString">
            <summary>Sets the shim of Cookie.Cookie(String name, String value, String path, String domain)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.DiscardGet">
            <summary>Sets the shim of Cookie.get_Discard()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.DiscardSetBoolean">
            <summary>Sets the shim of Cookie.set_Discard(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.DomainGet">
            <summary>Sets the shim of Cookie.get_Domain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.DomainSetString">
            <summary>Sets the shim of Cookie.set_Domain(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.EqualsObject">
            <summary>Sets the shim of Cookie.Equals(Object comparand)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExactDomainGet">
            <summary>Sets the shim of Cookie.get_ExactDomain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExactDomainSetBoolean">
            <summary>Sets the shim of Cookie.set_ExactDomain(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExpiredGet">
            <summary>Sets the shim of Cookie.get_Expired()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExpiredSetBoolean">
            <summary>Sets the shim of Cookie.set_Expired(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExpiresGet">
            <summary>Sets the shim of Cookie.get_Expires()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ExpiresSetDateTime">
            <summary>Sets the shim of Cookie.set_Expires(DateTime value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.GetHashCode">
            <summary>Sets the shim of Cookie.GetHashCode()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.HttpOnlyGet">
            <summary>Sets the shim of Cookie.get_HttpOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.HttpOnlySetBoolean">
            <summary>Sets the shim of Cookie.set_HttpOnly(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.MaxAgeGet">
            <summary>Sets the shim of Cookie.get_MaxAge()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.NameGet">
            <summary>Sets the shim of Cookie.get_Name()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.NameSetString">
            <summary>Sets the shim of Cookie.set_Name(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.PathGet">
            <summary>Sets the shim of Cookie.get_Path()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.PathSetString">
            <summary>Sets the shim of Cookie.set_Path(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.PortGet">
            <summary>Sets the shim of Cookie.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.PortSetString">
            <summary>Sets the shim of Cookie.set_Port(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.PortsGet">
            <summary>Sets the shim of Cookie.get_Ports()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.SecureGet">
            <summary>Sets the shim of Cookie.get_Secure()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.SecureSetBoolean">
            <summary>Sets the shim of Cookie.set_Secure(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.StaticConstructor">
            <summary>Sets the shim of Cookie.Cookie()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.TimeStampGet">
            <summary>Sets the shim of Cookie.get_TimeStamp()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ToRequestStringUri">
            <summary>Sets the shim of Cookie.ToRequestString(Uri uri)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ToResponseString">
            <summary>Sets the shim of Cookie.ToResponseString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ToString">
            <summary>Sets the shim of Cookie.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ValueGet">
            <summary>Sets the shim of Cookie.get_Value()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.ValueSetString">
            <summary>Sets the shim of Cookie.set_Value(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.VersionGet">
            <summary>Sets the shim of Cookie.get_Version()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.VersionSetInt32">
            <summary>Sets the shim of Cookie.set_Version(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.canSetNameStringStringOut">
            <summary>Sets the shim of Cookie.canSetName(String name, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.canSetValueStringStringOut">
            <summary>Sets the shim of Cookie.canSetValue(String value, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.hashInt32Int32Int32Int32Int32">
            <summary>Sets the shim of Cookie.hash(Int32 i, Int32 j, Int32 k, Int32 l, Int32 m)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.toResponseStringVersion0">
            <summary>Sets the shim of Cookie.toResponseStringVersion0()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.toResponseStringVersion1">
            <summary>Sets the shim of Cookie.toResponseStringVersion1()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookie.tryCreatePortsStringInt32ArrayOutStringOut">
            <summary>Sets the shim of Cookie.tryCreatePorts(String value, Int32[]&amp; result, String&amp; parseError)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookieCollection">
            <summary>Shim type of WebSocketSharp.Net.CookieCollection</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.#ctor(WebSocketSharp.Net.CookieCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AddCookie">
            <summary>Sets the shim of CookieCollection.Add(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AddCookieCollection">
            <summary>Sets the shim of CookieCollection.Add(CookieCollection cookies)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.AddCookie">
            <summary>Sets the shim of CookieCollection.Add(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.AddCookieCollection">
            <summary>Sets the shim of CookieCollection.Add(CookieCollection cookies)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of CookieCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.CopyToCookieArrayInt32">
            <summary>Sets the shim of CookieCollection.CopyTo(Cookie[] array, Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.CountGet">
            <summary>Sets the shim of CookieCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of CookieCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of CookieCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of CookieCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of CookieCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of CookieCollection.get_Item(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.ListGet">
            <summary>Sets the shim of CookieCollection.get_List()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.SetOrRemoveCookie">
            <summary>Sets the shim of CookieCollection.SetOrRemove(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.SetOrRemoveCookieCollection">
            <summary>Sets the shim of CookieCollection.SetOrRemove(CookieCollection cookies)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.Sort">
            <summary>Sets the shim of CookieCollection.Sort()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.SortedGet">
            <summary>Sets the shim of CookieCollection.get_Sorted()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of CookieCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.AllInstances.searchCookieCookie">
            <summary>Sets the shim of CookieCollection.searchCookie(Cookie cookie)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.Constructor">
            <summary>Sets the shim of CookieCollection.CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.CopyToArrayInt32">
            <summary>Sets the shim of CookieCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.CopyToCookieArrayInt32">
            <summary>Sets the shim of CookieCollection.CopyTo(Cookie[] array, Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.CountGet">
            <summary>Sets the shim of CookieCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.GetEnumerator">
            <summary>Sets the shim of CookieCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.IsReadOnlyGet">
            <summary>Sets the shim of CookieCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.IsSynchronizedGet">
            <summary>Sets the shim of CookieCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.ItemGetInt32">
            <summary>Sets the shim of CookieCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.ItemGetString">
            <summary>Sets the shim of CookieCollection.get_Item(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.ListGet">
            <summary>Sets the shim of CookieCollection.get_List()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.ParseStringBoolean">
            <summary>Sets the shim of CookieCollection.Parse(String value, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.SetOrRemoveCookie">
            <summary>Sets the shim of CookieCollection.SetOrRemove(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.SetOrRemoveCookieCollection">
            <summary>Sets the shim of CookieCollection.SetOrRemove(CookieCollection cookies)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.Sort">
            <summary>Sets the shim of CookieCollection.Sort()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.SortedGet">
            <summary>Sets the shim of CookieCollection.get_Sorted()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.SyncRootGet">
            <summary>Sets the shim of CookieCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.compareCookieWithinSortCookieCookie">
            <summary>Sets the shim of CookieCollection.compareCookieWithinSort(Cookie x, Cookie y)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.compareCookieWithinSortedCookieCookie">
            <summary>Sets the shim of CookieCollection.compareCookieWithinSorted(Cookie x, Cookie y)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.parseRequestString">
            <summary>Sets the shim of CookieCollection.parseRequest(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.parseResponseString">
            <summary>Sets the shim of CookieCollection.parseResponse(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.searchCookieCookie">
            <summary>Sets the shim of CookieCollection.searchCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieCollection.splitCookieHeaderValueString">
            <summary>Sets the shim of CookieCollection.splitCookieHeaderValue(String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookieException">
            <summary>Shim type of WebSocketSharp.Net.CookieException</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieException.#ctor(WebSocketSharp.Net.CookieException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimCookieException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.AllInstances.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CookieException.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimCookieException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.Constructor">
            <summary>Sets the shim of CookieException.CookieException()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of CookieException.CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.ConstructorString">
            <summary>Sets the shim of CookieException.CookieException(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.ConstructorStringException">
            <summary>Sets the shim of CookieException.CookieException(String message, Exception innerException)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimCookieException.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of CookieException.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity">
            <summary>Shim type of WebSocketSharp.Net.HttpBasicIdentity</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.#ctor(WebSocketSharp.Net.HttpBasicIdentity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpBasicIdentity.Bind(System.Security.Principal.IIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity">
            <summary>Shim type of WebSocketSharp.Net.HttpDigestIdentity</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.#ctor(WebSocketSharp.Net.HttpDigestIdentity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpDigestIdentity.Bind(System.Security.Principal.IIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListener">
            <summary>Shim type of WebSocketSharp.Net.HttpListener</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListener.#ctor(WebSocketSharp.Net.HttpListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Abort">
            <summary>Sets the shim of HttpListener.Abort()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.Abort">
            <summary>Sets the shim of HttpListener.Abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.AuthenticationSchemeSelectorGet">
            <summary>Sets the shim of HttpListener.get_AuthenticationSchemeSelector()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.AuthenticationSchemeSelectorSetFuncOfHttpListenerRequestAuthenticationSchemes">
            <summary>Sets the shim of HttpListener.set_AuthenticationSchemeSelector(Func`2&lt;HttpListenerRequest,AuthenticationSchemes&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.AuthenticationSchemesGet">
            <summary>Sets the shim of HttpListener.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of HttpListener.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.BeginGetContextAsyncCallbackObject">
            <summary>Sets the shim of HttpListener.BeginGetContext(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.CertificateFolderPathGet">
            <summary>Sets the shim of HttpListener.get_CertificateFolderPath()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.CertificateFolderPathSetString">
            <summary>Sets the shim of HttpListener.set_CertificateFolderPath(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.CheckDisposed">
            <summary>Sets the shim of HttpListener.CheckDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.Close">
            <summary>Sets the shim of HttpListener.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.EndGetContextIAsyncResult">
            <summary>Sets the shim of HttpListener.EndGetContext(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.GetContext">
            <summary>Sets the shim of HttpListener.GetContext()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.GetRealm">
            <summary>Sets the shim of HttpListener.GetRealm()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.GetUserCredentialsFinder">
            <summary>Sets the shim of HttpListener.GetUserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.IgnoreWriteExceptionsGet">
            <summary>Sets the shim of HttpListener.get_IgnoreWriteExceptions()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.IgnoreWriteExceptionsSetBoolean">
            <summary>Sets the shim of HttpListener.set_IgnoreWriteExceptions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.IsDisposedGet">
            <summary>Sets the shim of HttpListener.get_IsDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.IsListeningGet">
            <summary>Sets the shim of HttpListener.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.LogGet">
            <summary>Sets the shim of HttpListener.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.PrefixesGet">
            <summary>Sets the shim of HttpListener.get_Prefixes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.RealmGet">
            <summary>Sets the shim of HttpListener.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.RealmSetString">
            <summary>Sets the shim of HttpListener.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.RegisterContextHttpListenerContext">
            <summary>Sets the shim of HttpListener.RegisterContext(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.ReuseAddressGet">
            <summary>Sets the shim of HttpListener.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.ReuseAddressSetBoolean">
            <summary>Sets the shim of HttpListener.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.SelectAuthenticationSchemeHttpListenerRequest">
            <summary>Sets the shim of HttpListener.SelectAuthenticationScheme(HttpListenerRequest request)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.SslConfigurationGet">
            <summary>Sets the shim of HttpListener.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.SslConfigurationSetServerSslConfiguration">
            <summary>Sets the shim of HttpListener.set_SslConfiguration(ServerSslConfiguration value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.Start">
            <summary>Sets the shim of HttpListener.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.Stop">
            <summary>Sets the shim of HttpListener.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of HttpListener.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.UnregisterContextHttpListenerContext">
            <summary>Sets the shim of HttpListener.UnregisterContext(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.UnsafeConnectionNtlmAuthenticationGet">
            <summary>Sets the shim of HttpListener.get_UnsafeConnectionNtlmAuthentication()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.UnsafeConnectionNtlmAuthenticationSetBoolean">
            <summary>Sets the shim of HttpListener.set_UnsafeConnectionNtlmAuthentication(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.UserCredentialsFinderGet">
            <summary>Sets the shim of HttpListener.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of HttpListener.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.cleanupConnections">
            <summary>Sets the shim of HttpListener.cleanupConnections()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.cleanupContextQueueBoolean">
            <summary>Sets the shim of HttpListener.cleanupContextQueue(Boolean sendServiceUnavailable)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.cleanupContextRegistry">
            <summary>Sets the shim of HttpListener.cleanupContextRegistry()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.cleanupWaitQueueException">
            <summary>Sets the shim of HttpListener.cleanupWaitQueue(Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.closeBoolean">
            <summary>Sets the shim of HttpListener.close(Boolean force)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AllInstances.getContextFromQueue">
            <summary>Sets the shim of HttpListener.getContextFromQueue()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AuthenticationSchemeSelectorGet">
            <summary>Sets the shim of HttpListener.get_AuthenticationSchemeSelector()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AuthenticationSchemeSelectorSetFuncOfHttpListenerRequestAuthenticationSchemes">
            <summary>Sets the shim of HttpListener.set_AuthenticationSchemeSelector(Func`2&lt;HttpListenerRequest,AuthenticationSchemes&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AuthenticationSchemesGet">
            <summary>Sets the shim of HttpListener.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of HttpListener.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.BeginGetContextAsyncCallbackObject">
            <summary>Sets the shim of HttpListener.BeginGetContext(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListener.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.CertificateFolderPathGet">
            <summary>Sets the shim of HttpListener.get_CertificateFolderPath()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.CertificateFolderPathSetString">
            <summary>Sets the shim of HttpListener.set_CertificateFolderPath(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.CheckDisposed">
            <summary>Sets the shim of HttpListener.CheckDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Close">
            <summary>Sets the shim of HttpListener.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Constructor">
            <summary>Sets the shim of HttpListener.HttpListener()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.EndGetContextIAsyncResult">
            <summary>Sets the shim of HttpListener.EndGetContext(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.GetContext">
            <summary>Sets the shim of HttpListener.GetContext()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.GetRealm">
            <summary>Sets the shim of HttpListener.GetRealm()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.GetUserCredentialsFinder">
            <summary>Sets the shim of HttpListener.GetUserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.IgnoreWriteExceptionsGet">
            <summary>Sets the shim of HttpListener.get_IgnoreWriteExceptions()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.IgnoreWriteExceptionsSetBoolean">
            <summary>Sets the shim of HttpListener.set_IgnoreWriteExceptions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.IsDisposedGet">
            <summary>Sets the shim of HttpListener.get_IsDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.IsListeningGet">
            <summary>Sets the shim of HttpListener.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.IsSupportedGet">
            <summary>Sets the shim of HttpListener.get_IsSupported()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.LogGet">
            <summary>Sets the shim of HttpListener.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.PrefixesGet">
            <summary>Sets the shim of HttpListener.get_Prefixes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.RealmGet">
            <summary>Sets the shim of HttpListener.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.RealmSetString">
            <summary>Sets the shim of HttpListener.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.RegisterContextHttpListenerContext">
            <summary>Sets the shim of HttpListener.RegisterContext(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.ReuseAddressGet">
            <summary>Sets the shim of HttpListener.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.ReuseAddressSetBoolean">
            <summary>Sets the shim of HttpListener.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.SelectAuthenticationSchemeHttpListenerRequest">
            <summary>Sets the shim of HttpListener.SelectAuthenticationScheme(HttpListenerRequest request)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.SslConfigurationGet">
            <summary>Sets the shim of HttpListener.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.SslConfigurationSetServerSslConfiguration">
            <summary>Sets the shim of HttpListener.set_SslConfiguration(ServerSslConfiguration value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Start">
            <summary>Sets the shim of HttpListener.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.StaticConstructor">
            <summary>Sets the shim of HttpListener.HttpListener()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.Stop">
            <summary>Sets the shim of HttpListener.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.SystemIDisposableDispose">
            <summary>Sets the shim of HttpListener.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.UnregisterContextHttpListenerContext">
            <summary>Sets the shim of HttpListener.UnregisterContext(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.UnsafeConnectionNtlmAuthenticationGet">
            <summary>Sets the shim of HttpListener.get_UnsafeConnectionNtlmAuthentication()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.UnsafeConnectionNtlmAuthenticationSetBoolean">
            <summary>Sets the shim of HttpListener.set_UnsafeConnectionNtlmAuthentication(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.UserCredentialsFinderGet">
            <summary>Sets the shim of HttpListener.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of HttpListener.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.cleanupConnections">
            <summary>Sets the shim of HttpListener.cleanupConnections()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.cleanupContextQueueBoolean">
            <summary>Sets the shim of HttpListener.cleanupContextQueue(Boolean sendServiceUnavailable)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.cleanupContextRegistry">
            <summary>Sets the shim of HttpListener.cleanupContextRegistry()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.cleanupWaitQueueException">
            <summary>Sets the shim of HttpListener.cleanupWaitQueue(Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.closeBoolean">
            <summary>Sets the shim of HttpListener.close(Boolean force)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListener.getContextFromQueue">
            <summary>Sets the shim of HttpListener.getContextFromQueue()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerContext">
            <summary>Shim type of WebSocketSharp.Net.HttpListenerContext</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.#ctor(WebSocketSharp.Net.HttpListenerContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AcceptWebSocketString">
            <summary>Sets the shim of HttpListenerContext.AcceptWebSocket(String protocol)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.AcceptWebSocketString">
            <summary>Sets the shim of HttpListenerContext.AcceptWebSocket(String protocol)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.Authenticate">
            <summary>Sets the shim of HttpListenerContext.Authenticate()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of HttpListenerContext.get_ErrorMessage()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ErrorMessageSetString">
            <summary>Sets the shim of HttpListenerContext.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ErrorStatusGet">
            <summary>Sets the shim of HttpListenerContext.get_ErrorStatus()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ErrorStatusSetInt32">
            <summary>Sets the shim of HttpListenerContext.set_ErrorStatus(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.HasErrorGet">
            <summary>Sets the shim of HttpListenerContext.get_HasError()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ListenerGet">
            <summary>Sets the shim of HttpListenerContext.get_Listener()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ListenerSetHttpListener">
            <summary>Sets the shim of HttpListenerContext.set_Listener(HttpListener value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.Register">
            <summary>Sets the shim of HttpListenerContext.Register()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.RequestGet">
            <summary>Sets the shim of HttpListenerContext.get_Request()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.ResponseGet">
            <summary>Sets the shim of HttpListenerContext.get_Response()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.Unregister">
            <summary>Sets the shim of HttpListenerContext.Unregister()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.AllInstances.UserGet">
            <summary>Sets the shim of HttpListenerContext.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.Authenticate">
            <summary>Sets the shim of HttpListenerContext.Authenticate()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ErrorMessageGet">
            <summary>Sets the shim of HttpListenerContext.get_ErrorMessage()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ErrorMessageSetString">
            <summary>Sets the shim of HttpListenerContext.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ErrorStatusGet">
            <summary>Sets the shim of HttpListenerContext.get_ErrorStatus()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ErrorStatusSetInt32">
            <summary>Sets the shim of HttpListenerContext.set_ErrorStatus(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.HasErrorGet">
            <summary>Sets the shim of HttpListenerContext.get_HasError()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ListenerGet">
            <summary>Sets the shim of HttpListenerContext.get_Listener()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ListenerSetHttpListener">
            <summary>Sets the shim of HttpListenerContext.set_Listener(HttpListener value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.Register">
            <summary>Sets the shim of HttpListenerContext.Register()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.RequestGet">
            <summary>Sets the shim of HttpListenerContext.get_Request()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.ResponseGet">
            <summary>Sets the shim of HttpListenerContext.get_Response()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.Unregister">
            <summary>Sets the shim of HttpListenerContext.Unregister()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerContext.UserGet">
            <summary>Sets the shim of HttpListenerContext.get_User()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerException">
            <summary>Shim type of WebSocketSharp.Net.HttpListenerException</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerException.#ctor(WebSocketSharp.Net.HttpListenerException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.Constructor">
            <summary>Sets the shim of HttpListenerException.HttpListenerException()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.ConstructorInt32">
            <summary>Sets the shim of HttpListenerException.HttpListenerException(Int32 errorCode)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.ConstructorInt32String">
            <summary>Sets the shim of HttpListenerException.HttpListenerException(Int32 errorCode, String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of HttpListenerException.HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerException.ErrorCodeGet">
            <summary>Sets the shim of HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection">
            <summary>Shim type of WebSocketSharp.Net.HttpListenerPrefixCollection</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.#ctor(WebSocketSharp.Net.HttpListenerPrefixCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AddString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Add(String uriPrefix)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.AddString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Add(String uriPrefix)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.Clear">
            <summary>Sets the shim of HttpListenerPrefixCollection.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.ContainsString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Contains(String uriPrefix)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of HttpListenerPrefixCollection.CopyTo(Array array, Int32 offset)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.CopyToStringArrayInt32">
            <summary>Sets the shim of HttpListenerPrefixCollection.CopyTo(String[] array, Int32 offset)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.CountGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of HttpListenerPrefixCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.RemoveString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Remove(String uriPrefix)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.Clear">
            <summary>Sets the shim of HttpListenerPrefixCollection.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.ConstructorHttpListener">
            <summary>Sets the shim of HttpListenerPrefixCollection.HttpListenerPrefixCollection(HttpListener listener)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.ContainsString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Contains(String uriPrefix)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.CopyToArrayInt32">
            <summary>Sets the shim of HttpListenerPrefixCollection.CopyTo(Array array, Int32 offset)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.CopyToStringArrayInt32">
            <summary>Sets the shim of HttpListenerPrefixCollection.CopyTo(String[] array, Int32 offset)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.CountGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.GetEnumerator">
            <summary>Sets the shim of HttpListenerPrefixCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.IsReadOnlyGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.IsSynchronizedGet">
            <summary>Sets the shim of HttpListenerPrefixCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.RemoveString">
            <summary>Sets the shim of HttpListenerPrefixCollection.Remove(String uriPrefix)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerPrefixCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest">
            <summary>Shim type of WebSocketSharp.Net.HttpListenerRequest</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.#ctor(WebSocketSharp.Net.HttpListenerRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AcceptTypesGet">
            <summary>Sets the shim of HttpListenerRequest.get_AcceptTypes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AddHeaderString">
            <summary>Sets the shim of HttpListenerRequest.AddHeader(String header)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.AcceptTypesGet">
            <summary>Sets the shim of HttpListenerRequest.get_AcceptTypes()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.AddHeaderString">
            <summary>Sets the shim of HttpListenerRequest.AddHeader(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.BeginGetClientCertificateAsyncCallbackObject">
            <summary>Sets the shim of HttpListenerRequest.BeginGetClientCertificate(AsyncCallback requestCallback, Object state)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.ClientCertificateErrorGet">
            <summary>Sets the shim of HttpListenerRequest.get_ClientCertificateError()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.ContentLength64Get">
            <summary>Sets the shim of HttpListenerRequest.get_ContentLength64()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.ContentTypeGet">
            <summary>Sets the shim of HttpListenerRequest.get_ContentType()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.CookiesGet">
            <summary>Sets the shim of HttpListenerRequest.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.FinishInitialization">
            <summary>Sets the shim of HttpListenerRequest.FinishInitialization()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.FlushInput">
            <summary>Sets the shim of HttpListenerRequest.FlushInput()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.HasEntityBodyGet">
            <summary>Sets the shim of HttpListenerRequest.get_HasEntityBody()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpListenerRequest.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.HttpMethodGet">
            <summary>Sets the shim of HttpListenerRequest.get_HttpMethod()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.InputStreamGet">
            <summary>Sets the shim of HttpListenerRequest.get_InputStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsAuthenticated()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.IsLocalGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsLocal()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.IsSecureConnectionGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsSecureConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.IsWebSocketRequestGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsWebSocketRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.KeepAliveGet">
            <summary>Sets the shim of HttpListenerRequest.get_KeepAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.LocalEndPointGet">
            <summary>Sets the shim of HttpListenerRequest.get_LocalEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.ProtocolVersionGet">
            <summary>Sets the shim of HttpListenerRequest.get_ProtocolVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.QueryStringGet">
            <summary>Sets the shim of HttpListenerRequest.get_QueryString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.RawUrlGet">
            <summary>Sets the shim of HttpListenerRequest.get_RawUrl()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.RemoteEndPointGet">
            <summary>Sets the shim of HttpListenerRequest.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.RequestTraceIdentifierGet">
            <summary>Sets the shim of HttpListenerRequest.get_RequestTraceIdentifier()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.SetRequestLineString">
            <summary>Sets the shim of HttpListenerRequest.SetRequestLine(String requestLine)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.ToString01">
            <summary>Sets the shim of HttpListenerRequest.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UrlGet">
            <summary>Sets the shim of HttpListenerRequest.get_Url()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UrlReferrerGet">
            <summary>Sets the shim of HttpListenerRequest.get_UrlReferrer()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UserAgentGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserAgent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UserHostAddressGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserHostAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UserHostNameGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserHostName()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.AllInstances.UserLanguagesGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserLanguages()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.BeginGetClientCertificateAsyncCallbackObject">
            <summary>Sets the shim of HttpListenerRequest.BeginGetClientCertificate(AsyncCallback requestCallback, Object state)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ClientCertificateErrorGet">
            <summary>Sets the shim of HttpListenerRequest.get_ClientCertificateError()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ConstructorHttpListenerContext">
            <summary>Sets the shim of HttpListenerRequest.HttpListenerRequest(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ContentLength64Get">
            <summary>Sets the shim of HttpListenerRequest.get_ContentLength64()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ContentTypeGet">
            <summary>Sets the shim of HttpListenerRequest.get_ContentType()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.CookiesGet">
            <summary>Sets the shim of HttpListenerRequest.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.FinishInitialization">
            <summary>Sets the shim of HttpListenerRequest.FinishInitialization()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.FlushInput">
            <summary>Sets the shim of HttpListenerRequest.FlushInput()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.HasEntityBodyGet">
            <summary>Sets the shim of HttpListenerRequest.get_HasEntityBody()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.HeadersGet">
            <summary>Sets the shim of HttpListenerRequest.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.HttpMethodGet">
            <summary>Sets the shim of HttpListenerRequest.get_HttpMethod()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.InputStreamGet">
            <summary>Sets the shim of HttpListenerRequest.get_InputStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.IsAuthenticatedGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsAuthenticated()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.IsLocalGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsLocal()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.IsSecureConnectionGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsSecureConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.IsWebSocketRequestGet">
            <summary>Sets the shim of HttpListenerRequest.get_IsWebSocketRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.KeepAliveGet">
            <summary>Sets the shim of HttpListenerRequest.get_KeepAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.LocalEndPointGet">
            <summary>Sets the shim of HttpListenerRequest.get_LocalEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ProtocolVersionGet">
            <summary>Sets the shim of HttpListenerRequest.get_ProtocolVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.QueryStringGet">
            <summary>Sets the shim of HttpListenerRequest.get_QueryString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.RawUrlGet">
            <summary>Sets the shim of HttpListenerRequest.get_RawUrl()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.RemoteEndPointGet">
            <summary>Sets the shim of HttpListenerRequest.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.RequestTraceIdentifierGet">
            <summary>Sets the shim of HttpListenerRequest.get_RequestTraceIdentifier()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.SetRequestLineString">
            <summary>Sets the shim of HttpListenerRequest.SetRequestLine(String requestLine)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.StaticConstructor">
            <summary>Sets the shim of HttpListenerRequest.HttpListenerRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.ToString">
            <summary>Sets the shim of HttpListenerRequest.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UrlGet">
            <summary>Sets the shim of HttpListenerRequest.get_Url()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UrlReferrerGet">
            <summary>Sets the shim of HttpListenerRequest.get_UrlReferrer()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UserAgentGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserAgent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UserHostAddressGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserHostAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UserHostNameGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserHostName()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.UserLanguagesGet">
            <summary>Sets the shim of HttpListenerRequest.get_UserLanguages()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerRequest.tryCreateVersionStringVersionOut">
            <summary>Sets the shim of HttpListenerRequest.tryCreateVersion(String version, Version&amp; result)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse">
            <summary>Shim type of WebSocketSharp.Net.HttpListenerResponse</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.#ctor(WebSocketSharp.Net.HttpListenerResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.Abort">
            <summary>Sets the shim of HttpListenerResponse.Abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AddHeaderStringString">
            <summary>Sets the shim of HttpListenerResponse.AddHeader(String name, String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.Abort">
            <summary>Sets the shim of HttpListenerResponse.Abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.AddHeaderStringString">
            <summary>Sets the shim of HttpListenerResponse.AddHeader(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.AppendCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.AppendCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.AppendHeaderStringString">
            <summary>Sets the shim of HttpListenerResponse.AppendHeader(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.Close">
            <summary>Sets the shim of HttpListenerResponse.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CloseByteArrayBoolean">
            <summary>Sets the shim of HttpListenerResponse.Close(Byte[] responseEntity, Boolean willBlock)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CloseConnectionGet">
            <summary>Sets the shim of HttpListenerResponse.get_CloseConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CloseConnectionSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_CloseConnection(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ContentLength64Get">
            <summary>Sets the shim of HttpListenerResponse.get_ContentLength64()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ContentLength64SetInt64">
            <summary>Sets the shim of HttpListenerResponse.set_ContentLength64(Int64 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ContentTypeGet">
            <summary>Sets the shim of HttpListenerResponse.get_ContentType()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of HttpListenerResponse.set_ContentType(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CookiesGet">
            <summary>Sets the shim of HttpListenerResponse.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CookiesSetCookieCollection">
            <summary>Sets the shim of HttpListenerResponse.set_Cookies(CookieCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.CopyFromHttpListenerResponse">
            <summary>Sets the shim of HttpListenerResponse.CopyFrom(HttpListenerResponse templateResponse)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpListenerResponse.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.HeadersSentGet">
            <summary>Sets the shim of HttpListenerResponse.get_HeadersSent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.HeadersSentSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_HeadersSent(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of HttpListenerResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.KeepAliveGet">
            <summary>Sets the shim of HttpListenerResponse.get_KeepAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.KeepAliveSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_KeepAlive(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.OutputStreamGet">
            <summary>Sets the shim of HttpListenerResponse.get_OutputStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ProtocolVersionGet">
            <summary>Sets the shim of HttpListenerResponse.get_ProtocolVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.ProtocolVersionSetVersion">
            <summary>Sets the shim of HttpListenerResponse.set_ProtocolVersion(Version value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.RedirectLocationGet">
            <summary>Sets the shim of HttpListenerResponse.get_RedirectLocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.RedirectLocationSetString">
            <summary>Sets the shim of HttpListenerResponse.set_RedirectLocation(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.RedirectString">
            <summary>Sets the shim of HttpListenerResponse.Redirect(String url)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.SendChunkedGet">
            <summary>Sets the shim of HttpListenerResponse.get_SendChunked()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.SendChunkedSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_SendChunked(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.SetCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.SetCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.StatusCodeGet">
            <summary>Sets the shim of HttpListenerResponse.get_StatusCode()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.StatusCodeSetInt32">
            <summary>Sets the shim of HttpListenerResponse.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.StatusDescriptionGet">
            <summary>Sets the shim of HttpListenerResponse.get_StatusDescription()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.StatusDescriptionSetString">
            <summary>Sets the shim of HttpListenerResponse.set_StatusDescription(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of HttpListenerResponse.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.canAddOrUpdateCookie">
            <summary>Sets the shim of HttpListenerResponse.canAddOrUpdate(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.checkDisposed">
            <summary>Sets the shim of HttpListenerResponse.checkDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.checkDisposedOrHeadersSent">
            <summary>Sets the shim of HttpListenerResponse.checkDisposedOrHeadersSent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.closeBoolean">
            <summary>Sets the shim of HttpListenerResponse.close(Boolean force)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AllInstances.findCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.findCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AppendCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.AppendCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.AppendHeaderStringString">
            <summary>Sets the shim of HttpListenerResponse.AppendHeader(String name, String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.Close">
            <summary>Sets the shim of HttpListenerResponse.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CloseByteArrayBoolean">
            <summary>Sets the shim of HttpListenerResponse.Close(Byte[] responseEntity, Boolean willBlock)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CloseConnectionGet">
            <summary>Sets the shim of HttpListenerResponse.get_CloseConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CloseConnectionSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_CloseConnection(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ConstructorHttpListenerContext">
            <summary>Sets the shim of HttpListenerResponse.HttpListenerResponse(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ContentLength64Get">
            <summary>Sets the shim of HttpListenerResponse.get_ContentLength64()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ContentLength64SetInt64">
            <summary>Sets the shim of HttpListenerResponse.set_ContentLength64(Int64 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ContentTypeGet">
            <summary>Sets the shim of HttpListenerResponse.get_ContentType()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ContentTypeSetString">
            <summary>Sets the shim of HttpListenerResponse.set_ContentType(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CookiesGet">
            <summary>Sets the shim of HttpListenerResponse.get_Cookies()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CookiesSetCookieCollection">
            <summary>Sets the shim of HttpListenerResponse.set_Cookies(CookieCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.CopyFromHttpListenerResponse">
            <summary>Sets the shim of HttpListenerResponse.CopyFrom(HttpListenerResponse templateResponse)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.HeadersGet">
            <summary>Sets the shim of HttpListenerResponse.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.HeadersSentGet">
            <summary>Sets the shim of HttpListenerResponse.get_HeadersSent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.HeadersSentSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_HeadersSent(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of HttpListenerResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.KeepAliveGet">
            <summary>Sets the shim of HttpListenerResponse.get_KeepAlive()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.KeepAliveSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_KeepAlive(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.OutputStreamGet">
            <summary>Sets the shim of HttpListenerResponse.get_OutputStream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ProtocolVersionGet">
            <summary>Sets the shim of HttpListenerResponse.get_ProtocolVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.ProtocolVersionSetVersion">
            <summary>Sets the shim of HttpListenerResponse.set_ProtocolVersion(Version value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.RedirectLocationGet">
            <summary>Sets the shim of HttpListenerResponse.get_RedirectLocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.RedirectLocationSetString">
            <summary>Sets the shim of HttpListenerResponse.set_RedirectLocation(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.RedirectString">
            <summary>Sets the shim of HttpListenerResponse.Redirect(String url)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.SendChunkedGet">
            <summary>Sets the shim of HttpListenerResponse.get_SendChunked()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.SendChunkedSetBoolean">
            <summary>Sets the shim of HttpListenerResponse.set_SendChunked(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.SetCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.SetCookie(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.StatusCodeGet">
            <summary>Sets the shim of HttpListenerResponse.get_StatusCode()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.StatusCodeSetInt32">
            <summary>Sets the shim of HttpListenerResponse.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.StatusDescriptionGet">
            <summary>Sets the shim of HttpListenerResponse.get_StatusDescription()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.StatusDescriptionSetString">
            <summary>Sets the shim of HttpListenerResponse.set_StatusDescription(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.SystemIDisposableDispose">
            <summary>Sets the shim of HttpListenerResponse.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.canAddOrUpdateCookie">
            <summary>Sets the shim of HttpListenerResponse.canAddOrUpdate(Cookie cookie)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.checkDisposed">
            <summary>Sets the shim of HttpListenerResponse.checkDisposed()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.checkDisposedOrHeadersSent">
            <summary>Sets the shim of HttpListenerResponse.checkDisposedOrHeadersSent()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.closeBoolean">
            <summary>Sets the shim of HttpListenerResponse.close(Boolean force)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpListenerResponse.findCookieCookie">
            <summary>Sets the shim of HttpListenerResponse.findCookie(Cookie cookie)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpVersion">
            <summary>Shim type of WebSocketSharp.Net.HttpVersion</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpVersion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpVersion.#ctor(WebSocketSharp.Net.HttpVersion)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimHttpVersion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpVersion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimHttpVersion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpVersion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpVersion.Constructor">
            <summary>Sets the shim of HttpVersion.HttpVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimHttpVersion.StaticConstructor">
            <summary>Sets the shim of HttpVersion.HttpVersion()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimNetworkCredential">
            <summary>Shim type of WebSocketSharp.Net.NetworkCredential</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimNetworkCredential.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimNetworkCredential.#ctor(WebSocketSharp.Net.NetworkCredential)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.DomainGet">
            <summary>Sets the shim of NetworkCredential.get_Domain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.DomainSetString">
            <summary>Sets the shim of NetworkCredential.set_Domain(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.PasswordGet">
            <summary>Sets the shim of NetworkCredential.get_Password()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.PasswordSetString">
            <summary>Sets the shim of NetworkCredential.set_Password(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.RolesGet">
            <summary>Sets the shim of NetworkCredential.get_Roles()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.RolesSetStringArray">
            <summary>Sets the shim of NetworkCredential.set_Roles(String[] value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.UsernameGet">
            <summary>Sets the shim of NetworkCredential.get_Username()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.AllInstances.UsernameSetString">
            <summary>Sets the shim of NetworkCredential.set_Username(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimNetworkCredential.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimNetworkCredential.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.ConstructorStringString">
            <summary>Sets the shim of NetworkCredential.NetworkCredential(String username, String password)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.ConstructorStringStringStringStringArray">
            <summary>Sets the shim of NetworkCredential.NetworkCredential(String username, String password, String domain, String[] roles)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.DomainGet">
            <summary>Sets the shim of NetworkCredential.get_Domain()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.DomainSetString">
            <summary>Sets the shim of NetworkCredential.set_Domain(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.PasswordGet">
            <summary>Sets the shim of NetworkCredential.get_Password()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.PasswordSetString">
            <summary>Sets the shim of NetworkCredential.set_Password(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.RolesGet">
            <summary>Sets the shim of NetworkCredential.get_Roles()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.RolesSetStringArray">
            <summary>Sets the shim of NetworkCredential.set_Roles(String[] value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.StaticConstructor">
            <summary>Sets the shim of NetworkCredential.NetworkCredential()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.UsernameGet">
            <summary>Sets the shim of NetworkCredential.get_Username()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimNetworkCredential.UsernameSetString">
            <summary>Sets the shim of NetworkCredential.set_Username(String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration">
            <summary>Shim type of WebSocketSharp.Net.ServerSslConfiguration</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.#ctor(WebSocketSharp.Net.ServerSslConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.CheckCertificateRevocationGet">
            <summary>Sets the shim of ServerSslConfiguration.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of ServerSslConfiguration.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.ClientCertificateRequiredGet">
            <summary>Sets the shim of ServerSslConfiguration.get_ClientCertificateRequired()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.ClientCertificateRequiredSetBoolean">
            <summary>Sets the shim of ServerSslConfiguration.set_ClientCertificateRequired(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.ClientCertificateValidationCallbackGet">
            <summary>Sets the shim of ServerSslConfiguration.get_ClientCertificateValidationCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.ClientCertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of ServerSslConfiguration.set_ClientCertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.EnabledSslProtocolsGet">
            <summary>Sets the shim of ServerSslConfiguration.get_EnabledSslProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.AllInstances.EnabledSslProtocolsSetSslProtocols">
            <summary>Sets the shim of ServerSslConfiguration.set_EnabledSslProtocols(SslProtocols value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.CheckCertificateRevocationGet">
            <summary>Sets the shim of ServerSslConfiguration.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of ServerSslConfiguration.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.ClientCertificateRequiredGet">
            <summary>Sets the shim of ServerSslConfiguration.get_ClientCertificateRequired()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.ClientCertificateRequiredSetBoolean">
            <summary>Sets the shim of ServerSslConfiguration.set_ClientCertificateRequired(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.ClientCertificateValidationCallbackGet">
            <summary>Sets the shim of ServerSslConfiguration.get_ClientCertificateValidationCallback()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.ClientCertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of ServerSslConfiguration.set_ClientCertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.Constructor">
            <summary>Sets the shim of ServerSslConfiguration.ServerSslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.ConstructorServerSslConfiguration">
            <summary>Sets the shim of ServerSslConfiguration.ServerSslConfiguration(ServerSslConfiguration configuration)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.EnabledSslProtocolsGet">
            <summary>Sets the shim of ServerSslConfiguration.get_EnabledSslProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimServerSslConfiguration.EnabledSslProtocolsSetSslProtocols">
            <summary>Sets the shim of ServerSslConfiguration.set_EnabledSslProtocols(SslProtocols value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection">
            <summary>Shim type of WebSocketSharp.Net.WebHeaderCollection</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.#ctor(WebSocketSharp.Net.WebHeaderCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AddHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Add(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AddHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Add(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AddString">
            <summary>Sets the shim of WebHeaderCollection.Add(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AddStringString">
            <summary>Sets the shim of WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AddWithoutValidateStringString">
            <summary>Sets the shim of WebHeaderCollection.AddWithoutValidate(String headerName, String headerValue)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AddHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Add(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AddHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Add(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AddString">
            <summary>Sets the shim of WebHeaderCollection.Add(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AddStringString">
            <summary>Sets the shim of WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AddWithoutValidateStringString">
            <summary>Sets the shim of WebHeaderCollection.AddWithoutValidate(String headerName, String headerValue)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.AllKeysGet">
            <summary>Sets the shim of WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.Clear">
            <summary>Sets the shim of WebHeaderCollection.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.CountGet">
            <summary>Sets the shim of WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetInt32">
            <summary>Sets the shim of WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetKeyInt32">
            <summary>Sets the shim of WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetString">
            <summary>Sets the shim of WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetValuesInt32">
            <summary>Sets the shim of WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.GetValuesString">
            <summary>Sets the shim of WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.InternalRemoveString">
            <summary>Sets the shim of WebHeaderCollection.InternalRemove(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.InternalSetStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.InternalSet(String header, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.InternalSetStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.InternalSet(String name, String value, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ItemGetHttpRequestHeader">
            <summary>Sets the shim of WebHeaderCollection.get_Item(HttpRequestHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ItemGetHttpResponseHeader">
            <summary>Sets the shim of WebHeaderCollection.get_Item(HttpResponseHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ItemSetHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.set_Item(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ItemSetHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.set_Item(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.KeysGet">
            <summary>Sets the shim of WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.OnDeserializationObject">
            <summary>Sets the shim of WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.RemoveHttpRequestHeader">
            <summary>Sets the shim of WebHeaderCollection.Remove(HttpRequestHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.RemoveHttpResponseHeader">
            <summary>Sets the shim of WebHeaderCollection.Remove(HttpResponseHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.RemoveString">
            <summary>Sets the shim of WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.SetHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Set(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.SetHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Set(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.SetStringString">
            <summary>Sets the shim of WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of WebHeaderCollection.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ToByteArray">
            <summary>Sets the shim of WebHeaderCollection.ToByteArray()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ToString01">
            <summary>Sets the shim of WebHeaderCollection.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.ToStringMultiValueBoolean">
            <summary>Sets the shim of WebHeaderCollection.ToStringMultiValue(Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.addStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.add(String name, String value, Boolean ignoreRestricted)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.addWithoutCheckingNameAndRestrictedStringString">
            <summary>Sets the shim of WebHeaderCollection.addWithoutCheckingNameAndRestricted(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.addWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.addWithoutCheckingName(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.checkRestrictedString">
            <summary>Sets the shim of WebHeaderCollection.checkRestricted(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.checkStateBoolean">
            <summary>Sets the shim of WebHeaderCollection.checkState(Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.doWithCheckingStateActionOfStringStringStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.doWithCheckingState(Action`2&lt;String,String&gt; action, String name, String value, Boolean setState)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.doWithCheckingStateActionOfStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of WebHeaderCollection.doWithCheckingState(Action`2&lt;String,String&gt; action, String name, String value, Boolean response, Boolean setState)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.doWithoutCheckingNameActionOfStringStringStringString">
            <summary>Sets the shim of WebHeaderCollection.doWithoutCheckingName(Action`2&lt;String,String&gt; action, String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.removeWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.removeWithoutCheckingName(String name, String unuse)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllInstances.setWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.setWithoutCheckingName(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.AllKeysGet">
            <summary>Sets the shim of WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Clear">
            <summary>Sets the shim of WebHeaderCollection.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.Constructor">
            <summary>Sets the shim of WebHeaderCollection.WebHeaderCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of WebHeaderCollection.WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ConvertHttpRequestHeader">
            <summary>Sets the shim of WebHeaderCollection.Convert(HttpRequestHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ConvertHttpResponseHeader">
            <summary>Sets the shim of WebHeaderCollection.Convert(HttpResponseHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.CountGet">
            <summary>Sets the shim of WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetEnumerator">
            <summary>Sets the shim of WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetInt32">
            <summary>Sets the shim of WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetKeyInt32">
            <summary>Sets the shim of WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetString">
            <summary>Sets the shim of WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetValuesInt32">
            <summary>Sets the shim of WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.GetValuesString">
            <summary>Sets the shim of WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.InternalRemoveString">
            <summary>Sets the shim of WebHeaderCollection.InternalRemove(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.InternalSetStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.InternalSet(String header, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.InternalSetStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.InternalSet(String name, String value, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.IsHeaderNameString">
            <summary>Sets the shim of WebHeaderCollection.IsHeaderName(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.IsHeaderValueString">
            <summary>Sets the shim of WebHeaderCollection.IsHeaderValue(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.IsMultiValueStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.IsMultiValue(String headerName, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.IsRestrictedString">
            <summary>Sets the shim of WebHeaderCollection.IsRestricted(String headerName)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.IsRestrictedStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.IsRestricted(String headerName, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ItemGetHttpRequestHeader">
            <summary>Sets the shim of WebHeaderCollection.get_Item(HttpRequestHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ItemGetHttpResponseHeader">
            <summary>Sets the shim of WebHeaderCollection.get_Item(HttpResponseHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ItemSetHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.set_Item(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ItemSetHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.set_Item(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.KeysGet">
            <summary>Sets the shim of WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.OnDeserializationObject">
            <summary>Sets the shim of WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.RemoveHttpRequestHeader">
            <summary>Sets the shim of WebHeaderCollection.Remove(HttpRequestHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.RemoveHttpResponseHeader">
            <summary>Sets the shim of WebHeaderCollection.Remove(HttpResponseHeader header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.RemoveString">
            <summary>Sets the shim of WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.SetHttpRequestHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Set(HttpRequestHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.SetHttpResponseHeaderString">
            <summary>Sets the shim of WebHeaderCollection.Set(HttpResponseHeader header, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.SetStringString">
            <summary>Sets the shim of WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.StaticConstructor">
            <summary>Sets the shim of WebHeaderCollection.WebHeaderCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of WebHeaderCollection.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ToByteArray">
            <summary>Sets the shim of WebHeaderCollection.ToByteArray()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ToString">
            <summary>Sets the shim of WebHeaderCollection.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.ToStringMultiValueBoolean">
            <summary>Sets the shim of WebHeaderCollection.ToStringMultiValue(Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.addStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.add(String name, String value, Boolean ignoreRestricted)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.addWithoutCheckingNameAndRestrictedStringString">
            <summary>Sets the shim of WebHeaderCollection.addWithoutCheckingNameAndRestricted(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.addWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.addWithoutCheckingName(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.checkColonSeparatedString">
            <summary>Sets the shim of WebHeaderCollection.checkColonSeparated(String header)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.checkNameString">
            <summary>Sets the shim of WebHeaderCollection.checkName(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.checkRestrictedString">
            <summary>Sets the shim of WebHeaderCollection.checkRestricted(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.checkStateBoolean">
            <summary>Sets the shim of WebHeaderCollection.checkState(Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.checkValueString">
            <summary>Sets the shim of WebHeaderCollection.checkValue(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.convertString">
            <summary>Sets the shim of WebHeaderCollection.convert(String key)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.doWithCheckingStateActionOfStringStringStringStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.doWithCheckingState(Action`2&lt;String,String&gt; action, String name, String value, Boolean setState)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.doWithCheckingStateActionOfStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of WebHeaderCollection.doWithCheckingState(Action`2&lt;String,String&gt; action, String name, String value, Boolean response, Boolean setState)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.doWithoutCheckingNameActionOfStringStringStringString">
            <summary>Sets the shim of WebHeaderCollection.doWithoutCheckingName(Action`2&lt;String,String&gt; action, String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.isRestrictedStringBoolean">
            <summary>Sets the shim of WebHeaderCollection.isRestricted(String name, Boolean response)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.removeWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.removeWithoutCheckingName(String name, String unuse)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.ShimWebHeaderCollection.setWithoutCheckingNameStringString">
            <summary>Sets the shim of WebHeaderCollection.setWithoutCheckingName(String name, String value)</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubClientSslConfiguration">
            <summary>Stub type of WebSocketSharp.Net.ClientSslConfiguration</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.#ctor(WebSocketSharp.Net.ClientSslConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubClientSslConfiguration</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubClientSslConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubCookieCollection">
            <summary>Stub type of WebSocketSharp.Net.CookieCollection</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieCollection.InitializeStub">
            <summary>Initializes a new instance of type StubCookieCollection</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubCookieException">
            <summary>Stub type of WebSocketSharp.Net.CookieException</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCookieException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCookieException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of CookieException.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.InitializeStub">
            <summary>Initializes a new instance of type StubCookieException</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubCookieException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubCookieException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubCookieException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubHttpListenerException">
            <summary>Stub type of WebSocketSharp.Net.HttpListenerException</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubHttpListenerException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubHttpListenerException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.ErrorCode">
            <summary>Sets the stub of HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.ErrorCodeGet">
            <summary>Sets the stub of HttpListenerException.get_ErrorCode()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Win32Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.InitializeStub">
            <summary>Initializes a new instance of type StubHttpListenerException</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpListenerException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpListenerException.ToString">
            <summary>Sets the stub of ExternalException.ToString()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubHttpListenerException.ToString01">
            <summary>Sets the stub of ExternalException.ToString()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubHttpVersion">
            <summary>Stub type of WebSocketSharp.Net.HttpVersion</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpVersion.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpVersion.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubHttpVersion.InitializeStub">
            <summary>Initializes a new instance of type StubHttpVersion</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpVersion.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubHttpVersion.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubNetworkCredential">
            <summary>Stub type of WebSocketSharp.Net.NetworkCredential</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubNetworkCredential.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubNetworkCredential.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubNetworkCredential.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkCredential</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubNetworkCredential.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubNetworkCredential.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubServerSslConfiguration">
            <summary>Stub type of WebSocketSharp.Net.ServerSslConfiguration</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.#ctor(WebSocketSharp.Net.ServerSslConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubServerSslConfiguration</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubServerSslConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Net.Fakes.StubWebHeaderCollection">
            <summary>Stub type of WebSocketSharp.Net.WebHeaderCollection</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Add(System.String,System.String)">
            <summary>Sets the stub of WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.AddStringString">
            <summary>Sets the stub of WebHeaderCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.AllKeys">
            <summary>Sets the stub of WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.AllKeysGet">
            <summary>Sets the stub of WebHeaderCollection.get_AllKeys()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Clear">
            <summary>Sets the stub of WebHeaderCollection.Clear()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Clear01">
            <summary>Sets the stub of WebHeaderCollection.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Count">
            <summary>Sets the stub of WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.CountGet">
            <summary>Sets the stub of WebHeaderCollection.get_Count()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Get(System.Int32)">
            <summary>Sets the stub of WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Get(System.String)">
            <summary>Sets the stub of WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetEnumerator">
            <summary>Sets the stub of WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetEnumerator01">
            <summary>Sets the stub of WebHeaderCollection.GetEnumerator()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetInt32">
            <summary>Sets the stub of WebHeaderCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetKey(System.Int32)">
            <summary>Sets the stub of WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetKeyInt32">
            <summary>Sets the stub of WebHeaderCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of WebHeaderCollection.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetString">
            <summary>Sets the stub of WebHeaderCollection.Get(String name)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetValues(System.Int32)">
            <summary>Sets the stub of WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetValues(System.String)">
            <summary>Sets the stub of WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetValuesInt32">
            <summary>Sets the stub of WebHeaderCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.GetValuesString">
            <summary>Sets the stub of WebHeaderCollection.GetValues(String header)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.InitializeStub">
            <summary>Initializes a new instance of type StubWebHeaderCollection</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Keys">
            <summary>Sets the stub of WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.KeysGet">
            <summary>Sets the stub of WebHeaderCollection.get_Keys()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.OnDeserialization(System.Object)">
            <summary>Sets the stub of WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.OnDeserializationObject">
            <summary>Sets the stub of WebHeaderCollection.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Remove(System.String)">
            <summary>Sets the stub of WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.RemoveString">
            <summary>Sets the stub of WebHeaderCollection.Remove(String name)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.Set(System.String,System.String)">
            <summary>Sets the stub of WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.SetStringString">
            <summary>Sets the stub of WebHeaderCollection.Set(String name, String value)</summary>
        </member>
        <member name="M:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.ToString">
            <summary>Sets the stub of WebHeaderCollection.ToString()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.Fakes.StubWebHeaderCollection.ToString01">
            <summary>Sets the stub of WebHeaderCollection.ToString()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext">
            <summary>Shim type of WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.#ctor(WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.Close">
            <summary>Sets the shim of HttpListenerWebSocketContext.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.CloseHttpStatusCode">
            <summary>Sets the shim of HttpListenerWebSocketContext.Close(HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.CookieCollectionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.HostGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Host()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.IsLocalGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.IsSecureConnectionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.IsWebSocketRequestGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsWebSocketRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.LogGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.OriginGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Origin()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.QueryStringGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_QueryString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.RequestUriGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.SecWebSocketKeyGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.SecWebSocketProtocolsGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.SecWebSocketVersionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.ServerEndPointGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_ServerEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.StreamGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Stream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.ToString01">
            <summary>Sets the shim of HttpListenerWebSocketContext.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.UserEndPointGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_UserEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.UserGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.AllInstances.WebSocketGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.Close">
            <summary>Sets the shim of HttpListenerWebSocketContext.Close()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.CloseHttpStatusCode">
            <summary>Sets the shim of HttpListenerWebSocketContext.Close(HttpStatusCode code)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.ConstructorHttpListenerContextString">
            <summary>Sets the shim of HttpListenerWebSocketContext.HttpListenerWebSocketContext(HttpListenerContext context, String protocol)</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.CookieCollectionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.HeadersGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.HostGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Host()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.IsAuthenticatedGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.IsLocalGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.IsSecureConnectionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.IsWebSocketRequestGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_IsWebSocketRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.LogGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.OriginGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Origin()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.QueryStringGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_QueryString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.RequestUriGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.SecWebSocketKeyGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.SecWebSocketProtocolsGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.SecWebSocketVersionGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.ServerEndPointGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_ServerEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.StreamGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_Stream()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.ToString">
            <summary>Sets the shim of HttpListenerWebSocketContext.ToString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.UserEndPointGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_UserEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.UserGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimHttpListenerWebSocketContext.WebSocketGet">
            <summary>Sets the shim of HttpListenerWebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext">
            <summary>Shim type of WebSocketSharp.Net.WebSockets.WebSocketContext</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.#ctor(WebSocketSharp.Net.WebSockets.WebSocketContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.ShimWebSocketContext.Constructor">
            <summary>Sets the shim of WebSocketContext.WebSocketContext()</summary>
        </member>
        <member name="T:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext">
            <summary>Stub type of WebSocketSharp.Net.WebSockets.WebSocketContext</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.CookieCollection">
            <summary>Sets the stub of WebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.CookieCollectionGet">
            <summary>Sets the stub of WebSocketContext.get_CookieCollection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.Headers">
            <summary>Sets the stub of WebSocketContext.get_Headers()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.HeadersGet">
            <summary>Sets the stub of WebSocketContext.get_Headers()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.Host">
            <summary>Sets the stub of WebSocketContext.get_Host()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.HostGet">
            <summary>Sets the stub of WebSocketContext.get_Host()</summary>
        </member>
        <member name="M:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketContext</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsAuthenticated">
            <summary>Sets the stub of WebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsAuthenticatedGet">
            <summary>Sets the stub of WebSocketContext.get_IsAuthenticated()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsLocal">
            <summary>Sets the stub of WebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsLocalGet">
            <summary>Sets the stub of WebSocketContext.get_IsLocal()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsSecureConnection">
            <summary>Sets the stub of WebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsSecureConnectionGet">
            <summary>Sets the stub of WebSocketContext.get_IsSecureConnection()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsWebSocketRequest">
            <summary>Sets the stub of WebSocketContext.get_IsWebSocketRequest()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.IsWebSocketRequestGet">
            <summary>Sets the stub of WebSocketContext.get_IsWebSocketRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.Origin">
            <summary>Sets the stub of WebSocketContext.get_Origin()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.OriginGet">
            <summary>Sets the stub of WebSocketContext.get_Origin()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.QueryString">
            <summary>Sets the stub of WebSocketContext.get_QueryString()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.QueryStringGet">
            <summary>Sets the stub of WebSocketContext.get_QueryString()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.RequestUri">
            <summary>Sets the stub of WebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.RequestUriGet">
            <summary>Sets the stub of WebSocketContext.get_RequestUri()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketKey">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketKeyGet">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketKey()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketProtocols">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketProtocolsGet">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketProtocols()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketVersion">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.SecWebSocketVersionGet">
            <summary>Sets the stub of WebSocketContext.get_SecWebSocketVersion()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.ServerEndPoint">
            <summary>Sets the stub of WebSocketContext.get_ServerEndPoint()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.ServerEndPointGet">
            <summary>Sets the stub of WebSocketContext.get_ServerEndPoint()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.User">
            <summary>Sets the stub of WebSocketContext.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.UserEndPoint">
            <summary>Sets the stub of WebSocketContext.get_UserEndPoint()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.UserEndPointGet">
            <summary>Sets the stub of WebSocketContext.get_UserEndPoint()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.UserGet">
            <summary>Sets the stub of WebSocketContext.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.WebSocket">
            <summary>Sets the stub of WebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="F:WebSocketSharp.Net.WebSockets.Fakes.StubWebSocketContext.WebSocketGet">
            <summary>Sets the stub of WebSocketContext.get_WebSocket()</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs">
            <summary>Shim type of WebSocketSharp.Server.HttpRequestEventArgs</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.#ctor(WebSocketSharp.Server.HttpRequestEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.ReadFileString">
            <summary>Sets the shim of HttpRequestEventArgs.ReadFile(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.RequestGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_Request()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.ResponseGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_Response()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.TryReadFileStringByteArrayOut">
            <summary>Sets the shim of HttpRequestEventArgs.TryReadFile(String path, Byte[]&amp; contents)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.UserGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.AllInstances.createFilePathString">
            <summary>Sets the shim of HttpRequestEventArgs.createFilePath(String childPath)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.ConstructorHttpListenerContextString">
            <summary>Sets the shim of HttpRequestEventArgs.HttpRequestEventArgs(HttpListenerContext context, String documentRootPath)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.ReadFileString">
            <summary>Sets the shim of HttpRequestEventArgs.ReadFile(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.RequestGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_Request()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.ResponseGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_Response()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.TryReadFileStringByteArrayOut">
            <summary>Sets the shim of HttpRequestEventArgs.TryReadFile(String path, Byte[]&amp; contents)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.UserGet">
            <summary>Sets the shim of HttpRequestEventArgs.get_User()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.createFilePathString">
            <summary>Sets the shim of HttpRequestEventArgs.createFilePath(String childPath)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpRequestEventArgs.tryReadFileStringByteArrayOut">
            <summary>Sets the shim of HttpRequestEventArgs.tryReadFile(String path, Byte[]&amp; contents)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimHttpServer">
            <summary>Shim type of WebSocketSharp.Server.HttpServer</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.#ctor(WebSocketSharp.Server.HttpServer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AddWebSocketServiceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AddWebSocketServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Action{``0}})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AddWebSocketServiceOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Func{``0}})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AddressGet">
            <summary>Sets the shim of HttpServer.get_Address()</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AddWebSocketServiceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.HttpServer,System.String})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AddWebSocketServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.HttpServer,System.String,System.Action{``0}})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AddWebSocketServiceOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.HttpServer,System.String,System.Func{``0}})">
            <summary>Sets the shim of HttpServer.AddWebSocketService(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AddressGet">
            <summary>Sets the shim of HttpServer.get_Address()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AuthenticationSchemesGet">
            <summary>Sets the shim of HttpServer.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of HttpServer.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.DocumentRootPathGet">
            <summary>Sets the shim of HttpServer.get_DocumentRootPath()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.DocumentRootPathSetString">
            <summary>Sets the shim of HttpServer.set_DocumentRootPath(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.GetFileString">
            <summary>Sets the shim of HttpServer.GetFile(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.IsListeningGet">
            <summary>Sets the shim of HttpServer.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.IsSecureGet">
            <summary>Sets the shim of HttpServer.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.KeepCleanGet">
            <summary>Sets the shim of HttpServer.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.KeepCleanSetBoolean">
            <summary>Sets the shim of HttpServer.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.LogGet">
            <summary>Sets the shim of HttpServer.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnConnectAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnConnect(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnConnectRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnConnect(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnDeleteAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnDelete(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnDeleteRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnDelete(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnGetAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnGet(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnGetRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnGet(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnHeadAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnHead(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnHeadRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnHead(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnOptionsAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnOptions(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnOptionsRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnOptions(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPatchAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPatch(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPatchRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPatch(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPostAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPost(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPostRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPost(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPutAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPut(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnPutRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPut(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnTraceAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnTrace(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.OnTraceRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnTrace(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.PortGet">
            <summary>Sets the shim of HttpServer.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.RealmGet">
            <summary>Sets the shim of HttpServer.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.RealmSetString">
            <summary>Sets the shim of HttpServer.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.RemoveWebSocketServiceString">
            <summary>Sets the shim of HttpServer.RemoveWebSocketService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.ReuseAddressGet">
            <summary>Sets the shim of HttpServer.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.ReuseAddressSetBoolean">
            <summary>Sets the shim of HttpServer.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.SslConfigurationGet">
            <summary>Sets the shim of HttpServer.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.Start">
            <summary>Sets the shim of HttpServer.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.Stop">
            <summary>Sets the shim of HttpServer.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.StopCloseStatusCodeString">
            <summary>Sets the shim of HttpServer.Stop(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.StopUInt16String">
            <summary>Sets the shim of HttpServer.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.UserCredentialsFinderGet">
            <summary>Sets the shim of HttpServer.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of HttpServer.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.WaitTimeGet">
            <summary>Sets the shim of HttpServer.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of HttpServer.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.WebSocketServicesGet">
            <summary>Sets the shim of HttpServer.get_WebSocketServices()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.abort">
            <summary>Sets the shim of HttpServer.abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.canSetStringOut">
            <summary>Sets the shim of HttpServer.canSet(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.checkCertificateStringOut">
            <summary>Sets the shim of HttpServer.checkCertificate(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.createFilePathString">
            <summary>Sets the shim of HttpServer.createFilePath(String childPath)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.initStringIPAddressInt32Boolean">
            <summary>Sets the shim of HttpServer.init(String hostname, IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.processRequestHttpListenerContext">
            <summary>Sets the shim of HttpServer.processRequest(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.processRequestHttpListenerWebSocketContext">
            <summary>Sets the shim of HttpServer.processRequest(HttpListenerWebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.receiveRequest">
            <summary>Sets the shim of HttpServer.receiveRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.start">
            <summary>Sets the shim of HttpServer.start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.startReceiving">
            <summary>Sets the shim of HttpServer.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.stopReceivingInt32">
            <summary>Sets the shim of HttpServer.stopReceiving(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AllInstances.stopUInt16String">
            <summary>Sets the shim of HttpServer.stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AuthenticationSchemesGet">
            <summary>Sets the shim of HttpServer.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of HttpServer.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimHttpServer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.Constructor">
            <summary>Sets the shim of HttpServer.HttpServer()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ConstructorIPAddressInt32">
            <summary>Sets the shim of HttpServer.HttpServer(IPAddress address, Int32 port)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ConstructorIPAddressInt32Boolean">
            <summary>Sets the shim of HttpServer.HttpServer(IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ConstructorInt32">
            <summary>Sets the shim of HttpServer.HttpServer(Int32 port)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ConstructorInt32Boolean">
            <summary>Sets the shim of HttpServer.HttpServer(Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ConstructorString">
            <summary>Sets the shim of HttpServer.HttpServer(String url)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.DocumentRootPathGet">
            <summary>Sets the shim of HttpServer.get_DocumentRootPath()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.DocumentRootPathSetString">
            <summary>Sets the shim of HttpServer.set_DocumentRootPath(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.GetFileString">
            <summary>Sets the shim of HttpServer.GetFile(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.IsListeningGet">
            <summary>Sets the shim of HttpServer.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.IsSecureGet">
            <summary>Sets the shim of HttpServer.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.KeepCleanGet">
            <summary>Sets the shim of HttpServer.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.KeepCleanSetBoolean">
            <summary>Sets the shim of HttpServer.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.LogGet">
            <summary>Sets the shim of HttpServer.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnConnectAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnConnect(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnConnectRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnConnect(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnDeleteAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnDelete(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnDeleteRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnDelete(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnGetAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnGet(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnGetRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnGet(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnHeadAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnHead(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnHeadRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnHead(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnOptionsAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnOptions(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnOptionsRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnOptions(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPatchAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPatch(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPatchRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPatch(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPostAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPost(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPostRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPost(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPutAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnPut(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnPutRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnPut(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnTraceAddEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.add_OnTrace(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.OnTraceRemoveEventHandlerOfHttpRequestEventArgs">
            <summary>Sets the shim of HttpServer.remove_OnTrace(EventHandler`1&lt;HttpRequestEventArgs&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.PortGet">
            <summary>Sets the shim of HttpServer.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.RealmGet">
            <summary>Sets the shim of HttpServer.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.RealmSetString">
            <summary>Sets the shim of HttpServer.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.RemoveWebSocketServiceString">
            <summary>Sets the shim of HttpServer.RemoveWebSocketService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ReuseAddressGet">
            <summary>Sets the shim of HttpServer.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.ReuseAddressSetBoolean">
            <summary>Sets the shim of HttpServer.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.SslConfigurationGet">
            <summary>Sets the shim of HttpServer.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.Start">
            <summary>Sets the shim of HttpServer.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.Stop">
            <summary>Sets the shim of HttpServer.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.StopCloseStatusCodeString">
            <summary>Sets the shim of HttpServer.Stop(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.StopUInt16String">
            <summary>Sets the shim of HttpServer.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.UserCredentialsFinderGet">
            <summary>Sets the shim of HttpServer.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of HttpServer.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.WaitTimeGet">
            <summary>Sets the shim of HttpServer.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.WaitTimeSetTimeSpan">
            <summary>Sets the shim of HttpServer.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.WebSocketServicesGet">
            <summary>Sets the shim of HttpServer.get_WebSocketServices()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.abort">
            <summary>Sets the shim of HttpServer.abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.canSetStringOut">
            <summary>Sets the shim of HttpServer.canSet(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.checkCertificateStringOut">
            <summary>Sets the shim of HttpServer.checkCertificate(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.createFilePathString">
            <summary>Sets the shim of HttpServer.createFilePath(String childPath)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.createListenerStringInt32Boolean">
            <summary>Sets the shim of HttpServer.createListener(String hostname, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.initStringIPAddressInt32Boolean">
            <summary>Sets the shim of HttpServer.init(String hostname, IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.processRequestHttpListenerContext">
            <summary>Sets the shim of HttpServer.processRequest(HttpListenerContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.processRequestHttpListenerWebSocketContext">
            <summary>Sets the shim of HttpServer.processRequest(HttpListenerWebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.receiveRequest">
            <summary>Sets the shim of HttpServer.receiveRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.start">
            <summary>Sets the shim of HttpServer.start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.startReceiving">
            <summary>Sets the shim of HttpServer.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.stopReceivingInt32">
            <summary>Sets the shim of HttpServer.stopReceiving(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.stopUInt16String">
            <summary>Sets the shim of HttpServer.stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimHttpServer.tryCreateUriStringUriOutStringOut">
            <summary>Sets the shim of HttpServer.tryCreateUri(String uriString, Uri&amp; result, String&amp; message)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior">
            <summary>Shim type of WebSocketSharp.Server.WebSocketBehavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.#ctor(WebSocketSharp.Server.WebSocketBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.ContextGet">
            <summary>Sets the shim of WebSocketBehavior.get_Context()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.CookiesValidatorGet">
            <summary>Sets the shim of WebSocketBehavior.get_CookiesValidator()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.CookiesValidatorSetFuncOfCookieCollectionCookieCollectionBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_CookiesValidator(Func`3&lt;CookieCollection,CookieCollection,Boolean&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.EmitOnPingGet">
            <summary>Sets the shim of WebSocketBehavior.get_EmitOnPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.EmitOnPingSetBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_EmitOnPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.ErrorStringException">
            <summary>Sets the shim of WebSocketBehavior.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.IDGet">
            <summary>Sets the shim of WebSocketBehavior.get_ID()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.IgnoreExtensionsGet">
            <summary>Sets the shim of WebSocketBehavior.get_IgnoreExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.IgnoreExtensionsSetBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_IgnoreExtensions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.LogGet">
            <summary>Sets the shim of WebSocketBehavior.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OnCloseCloseEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnClose(CloseEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OnErrorErrorEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OnMessageMessageEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnMessage(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OnOpen">
            <summary>Sets the shim of WebSocketBehavior.OnOpen()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OriginValidatorGet">
            <summary>Sets the shim of WebSocketBehavior.get_OriginValidator()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.OriginValidatorSetFuncOfStringBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_OriginValidator(Func`2&lt;String,Boolean&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.ProtocolGet">
            <summary>Sets the shim of WebSocketBehavior.get_Protocol()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.ProtocolSetString">
            <summary>Sets the shim of WebSocketBehavior.set_Protocol(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendAsyncByteArrayActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(Byte[] data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendAsyncFileInfoActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(FileInfo file, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendAsyncStreamInt32ActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(Stream stream, Int32 length, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendAsyncStringActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(String data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendByteArray">
            <summary>Sets the shim of WebSocketBehavior.Send(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendFileInfo">
            <summary>Sets the shim of WebSocketBehavior.Send(FileInfo file)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SendString">
            <summary>Sets the shim of WebSocketBehavior.Send(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.SessionsGet">
            <summary>Sets the shim of WebSocketBehavior.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.StartTimeGet">
            <summary>Sets the shim of WebSocketBehavior.get_StartTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.StartWebSocketContextWebSocketSessionManager">
            <summary>Sets the shim of WebSocketBehavior.Start(WebSocketContext context, WebSocketSessionManager sessions)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.StateGet">
            <summary>Sets the shim of WebSocketBehavior.get_State()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.checkHandshakeRequestWebSocketContext">
            <summary>Sets the shim of WebSocketBehavior.checkHandshakeRequest(WebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.onCloseObjectCloseEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onClose(Object sender, CloseEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.onErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onError(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.onMessageObjectMessageEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onMessage(Object sender, MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.AllInstances.onOpenObjectEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onOpen(Object sender, EventArgs e)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.Bind(WebSocketSharp.Server.IWebSocketSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.Constructor">
            <summary>Sets the shim of WebSocketBehavior.WebSocketBehavior()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.ContextGet">
            <summary>Sets the shim of WebSocketBehavior.get_Context()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.CookiesValidatorGet">
            <summary>Sets the shim of WebSocketBehavior.get_CookiesValidator()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.CookiesValidatorSetFuncOfCookieCollectionCookieCollectionBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_CookiesValidator(Func`3&lt;CookieCollection,CookieCollection,Boolean&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.EmitOnPingGet">
            <summary>Sets the shim of WebSocketBehavior.get_EmitOnPing()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.EmitOnPingSetBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_EmitOnPing(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.ErrorStringException">
            <summary>Sets the shim of WebSocketBehavior.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.IDGet">
            <summary>Sets the shim of WebSocketBehavior.get_ID()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.IgnoreExtensionsGet">
            <summary>Sets the shim of WebSocketBehavior.get_IgnoreExtensions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.IgnoreExtensionsSetBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_IgnoreExtensions(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.LogGet">
            <summary>Sets the shim of WebSocketBehavior.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OnCloseCloseEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnClose(CloseEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OnErrorErrorEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OnMessageMessageEventArgs">
            <summary>Sets the shim of WebSocketBehavior.OnMessage(MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OnOpen">
            <summary>Sets the shim of WebSocketBehavior.OnOpen()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OriginValidatorGet">
            <summary>Sets the shim of WebSocketBehavior.get_OriginValidator()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.OriginValidatorSetFuncOfStringBoolean">
            <summary>Sets the shim of WebSocketBehavior.set_OriginValidator(Func`2&lt;String,Boolean&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.ProtocolGet">
            <summary>Sets the shim of WebSocketBehavior.get_Protocol()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.ProtocolSetString">
            <summary>Sets the shim of WebSocketBehavior.set_Protocol(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendAsyncByteArrayActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(Byte[] data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendAsyncFileInfoActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(FileInfo file, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendAsyncStreamInt32ActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(Stream stream, Int32 length, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendAsyncStringActionOfBoolean">
            <summary>Sets the shim of WebSocketBehavior.SendAsync(String data, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendByteArray">
            <summary>Sets the shim of WebSocketBehavior.Send(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendFileInfo">
            <summary>Sets the shim of WebSocketBehavior.Send(FileInfo file)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SendString">
            <summary>Sets the shim of WebSocketBehavior.Send(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.SessionsGet">
            <summary>Sets the shim of WebSocketBehavior.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.StartTimeGet">
            <summary>Sets the shim of WebSocketBehavior.get_StartTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.StartWebSocketContextWebSocketSessionManager">
            <summary>Sets the shim of WebSocketBehavior.Start(WebSocketContext context, WebSocketSessionManager sessions)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.StateGet">
            <summary>Sets the shim of WebSocketBehavior.get_State()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.checkHandshakeRequestWebSocketContext">
            <summary>Sets the shim of WebSocketBehavior.checkHandshakeRequest(WebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.onCloseObjectCloseEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onClose(Object sender, CloseEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.onErrorObjectErrorEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onError(Object sender, ErrorEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.onMessageObjectMessageEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onMessage(Object sender, MessageEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketBehavior.onOpenObjectEventArgs">
            <summary>Sets the shim of WebSocketBehavior.onOpen(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServer">
            <summary>Shim type of WebSocketSharp.Server.WebSocketServer</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.#ctor(WebSocketSharp.Server.WebSocketServer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AddWebSocketServiceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AddWebSocketServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Action{``0}})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AddWebSocketServiceOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Func{``0}})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AddressGet">
            <summary>Sets the shim of WebSocketServer.get_Address()</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AddWebSocketServiceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.WebSocketServer,System.String})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AddWebSocketServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.WebSocketServer,System.String,System.Action{``0}})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AddWebSocketServiceOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.WebSocketServer,System.String,System.Func{``0}})">
            <summary>Sets the shim of WebSocketServer.AddWebSocketService(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AddressGet">
            <summary>Sets the shim of WebSocketServer.get_Address()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AllowForwardedRequestGet">
            <summary>Sets the shim of WebSocketServer.get_AllowForwardedRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AllowForwardedRequestSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_AllowForwardedRequest(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AuthenticationSchemesGet">
            <summary>Sets the shim of WebSocketServer.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of WebSocketServer.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.IsListeningGet">
            <summary>Sets the shim of WebSocketServer.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.IsSecureGet">
            <summary>Sets the shim of WebSocketServer.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.KeepCleanGet">
            <summary>Sets the shim of WebSocketServer.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.LogGet">
            <summary>Sets the shim of WebSocketServer.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.PortGet">
            <summary>Sets the shim of WebSocketServer.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.RealmGet">
            <summary>Sets the shim of WebSocketServer.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.RealmSetString">
            <summary>Sets the shim of WebSocketServer.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.RemoveWebSocketServiceString">
            <summary>Sets the shim of WebSocketServer.RemoveWebSocketService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.ReuseAddressGet">
            <summary>Sets the shim of WebSocketServer.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.ReuseAddressSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.SslConfigurationGet">
            <summary>Sets the shim of WebSocketServer.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.Start">
            <summary>Sets the shim of WebSocketServer.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.Stop">
            <summary>Sets the shim of WebSocketServer.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.StopCloseStatusCodeString">
            <summary>Sets the shim of WebSocketServer.Stop(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.StopUInt16String">
            <summary>Sets the shim of WebSocketServer.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.UserCredentialsFinderGet">
            <summary>Sets the shim of WebSocketServer.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of WebSocketServer.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.WaitTimeGet">
            <summary>Sets the shim of WebSocketServer.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServer.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.WebSocketServicesGet">
            <summary>Sets the shim of WebSocketServer.get_WebSocketServices()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.abort">
            <summary>Sets the shim of WebSocketServer.abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.canSetStringOut">
            <summary>Sets the shim of WebSocketServer.canSet(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.checkHostNameForRequestString">
            <summary>Sets the shim of WebSocketServer.checkHostNameForRequest(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.checkSslConfigurationServerSslConfigurationStringOut">
            <summary>Sets the shim of WebSocketServer.checkSslConfiguration(ServerSslConfiguration configuration, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.getRealm">
            <summary>Sets the shim of WebSocketServer.getRealm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.getSslConfiguration">
            <summary>Sets the shim of WebSocketServer.getSslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.initStringIPAddressInt32Boolean">
            <summary>Sets the shim of WebSocketServer.init(String hostname, IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.receiveRequest">
            <summary>Sets the shim of WebSocketServer.receiveRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.startReceiving">
            <summary>Sets the shim of WebSocketServer.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.startServerSslConfiguration">
            <summary>Sets the shim of WebSocketServer.start(ServerSslConfiguration sslConfig)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.stopReceivingInt32">
            <summary>Sets the shim of WebSocketServer.stopReceiving(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllInstances.stopUInt16String">
            <summary>Sets the shim of WebSocketServer.stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllowForwardedRequestGet">
            <summary>Sets the shim of WebSocketServer.get_AllowForwardedRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AllowForwardedRequestSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_AllowForwardedRequest(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AuthenticationSchemesGet">
            <summary>Sets the shim of WebSocketServer.get_AuthenticationSchemes()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.AuthenticationSchemesSetAuthenticationSchemes">
            <summary>Sets the shim of WebSocketServer.set_AuthenticationSchemes(AuthenticationSchemes value)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.Constructor">
            <summary>Sets the shim of WebSocketServer.WebSocketServer()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ConstructorIPAddressInt32">
            <summary>Sets the shim of WebSocketServer.WebSocketServer(IPAddress address, Int32 port)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ConstructorIPAddressInt32Boolean">
            <summary>Sets the shim of WebSocketServer.WebSocketServer(IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ConstructorInt32">
            <summary>Sets the shim of WebSocketServer.WebSocketServer(Int32 port)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ConstructorInt32Boolean">
            <summary>Sets the shim of WebSocketServer.WebSocketServer(Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ConstructorString">
            <summary>Sets the shim of WebSocketServer.WebSocketServer(String url)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.IsListeningGet">
            <summary>Sets the shim of WebSocketServer.get_IsListening()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.IsSecureGet">
            <summary>Sets the shim of WebSocketServer.get_IsSecure()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.KeepCleanGet">
            <summary>Sets the shim of WebSocketServer.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.LogGet">
            <summary>Sets the shim of WebSocketServer.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.PortGet">
            <summary>Sets the shim of WebSocketServer.get_Port()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.RealmGet">
            <summary>Sets the shim of WebSocketServer.get_Realm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.RealmSetString">
            <summary>Sets the shim of WebSocketServer.set_Realm(String value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.RemoveWebSocketServiceString">
            <summary>Sets the shim of WebSocketServer.RemoveWebSocketService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ReuseAddressGet">
            <summary>Sets the shim of WebSocketServer.get_ReuseAddress()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.ReuseAddressSetBoolean">
            <summary>Sets the shim of WebSocketServer.set_ReuseAddress(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.SslConfigurationGet">
            <summary>Sets the shim of WebSocketServer.get_SslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.Start">
            <summary>Sets the shim of WebSocketServer.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.StaticConstructor">
            <summary>Sets the shim of WebSocketServer.WebSocketServer()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.Stop">
            <summary>Sets the shim of WebSocketServer.Stop()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.StopCloseStatusCodeString">
            <summary>Sets the shim of WebSocketServer.Stop(CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.StopUInt16String">
            <summary>Sets the shim of WebSocketServer.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.UserCredentialsFinderGet">
            <summary>Sets the shim of WebSocketServer.get_UserCredentialsFinder()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.UserCredentialsFinderSetFuncOfIIdentityNetworkCredential">
            <summary>Sets the shim of WebSocketServer.set_UserCredentialsFinder(Func`2&lt;IIdentity,NetworkCredential&gt; value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.WaitTimeGet">
            <summary>Sets the shim of WebSocketServer.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServer.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.WebSocketServicesGet">
            <summary>Sets the shim of WebSocketServer.get_WebSocketServices()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.abort">
            <summary>Sets the shim of WebSocketServer.abort()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.canSetStringOut">
            <summary>Sets the shim of WebSocketServer.canSet(String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.checkHostNameForRequestString">
            <summary>Sets the shim of WebSocketServer.checkHostNameForRequest(String name)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.checkSslConfigurationServerSslConfigurationStringOut">
            <summary>Sets the shim of WebSocketServer.checkSslConfiguration(ServerSslConfiguration configuration, String&amp; message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.getRealm">
            <summary>Sets the shim of WebSocketServer.getRealm()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.getSslConfiguration">
            <summary>Sets the shim of WebSocketServer.getSslConfiguration()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.initStringIPAddressInt32Boolean">
            <summary>Sets the shim of WebSocketServer.init(String hostname, IPAddress address, Int32 port, Boolean secure)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.receiveRequest">
            <summary>Sets the shim of WebSocketServer.receiveRequest()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.startReceiving">
            <summary>Sets the shim of WebSocketServer.startReceiving()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.startServerSslConfiguration">
            <summary>Sets the shim of WebSocketServer.start(ServerSslConfiguration sslConfig)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.stopReceivingInt32">
            <summary>Sets the shim of WebSocketServer.stopReceiving(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.stopUInt16String">
            <summary>Sets the shim of WebSocketServer.stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServer.tryCreateUriStringUriOutStringOut">
            <summary>Sets the shim of WebSocketServer.tryCreateUri(String uriString, Uri&amp; result, String&amp; message)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost">
            <summary>Shim type of WebSocketSharp.Server.WebSocketServiceHost</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.#ctor(WebSocketSharp.Server.WebSocketServiceHost)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.KeepCleanGet">
            <summary>Sets the shim of WebSocketServiceHost.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServiceHost.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.LogGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.PathGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Path()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.SessionsGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.Start">
            <summary>Sets the shim of WebSocketServiceHost.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.StartSessionWebSocketContext">
            <summary>Sets the shim of WebSocketServiceHost.StartSession(WebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.StopUInt16String">
            <summary>Sets the shim of WebSocketServiceHost.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.WaitTimeGet">
            <summary>Sets the shim of WebSocketServiceHost.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServiceHost.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.AllInstances.canSetStringOut">
            <summary>Sets the shim of WebSocketServiceHost.canSet(String&amp; message)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.ConstructorStringLogger">
            <summary>Sets the shim of WebSocketServiceHost.WebSocketServiceHost(String path, Logger log)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.KeepCleanGet">
            <summary>Sets the shim of WebSocketServiceHost.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServiceHost.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.LogGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Log()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.PathGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Path()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.SessionsGet">
            <summary>Sets the shim of WebSocketServiceHost.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.Start">
            <summary>Sets the shim of WebSocketServiceHost.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.StartSessionWebSocketContext">
            <summary>Sets the shim of WebSocketServiceHost.StartSession(WebSocketContext context)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.StopUInt16String">
            <summary>Sets the shim of WebSocketServiceHost.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.WaitTimeGet">
            <summary>Sets the shim of WebSocketServiceHost.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServiceHost.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceHost.canSetStringOut">
            <summary>Sets the shim of WebSocketServiceHost.canSet(String&amp; message)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager">
            <summary>Shim type of WebSocketSharp.Server.WebSocketServiceManager</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.#ctor(WebSocketSharp.Server.WebSocketServiceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AddOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Func{``0}})">
            <summary>Sets the shim of WebSocketServiceManager.Add(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AddServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Action{``0}})">
            <summary>Sets the shim of WebSocketServiceManager.AddService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.AddOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.WebSocketServiceManager,System.String,System.Func{``0}})">
            <summary>Sets the shim of WebSocketServiceManager.Add(String path, Func`1&lt;!!0&gt; creator)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.AddServiceOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebSocketSharp.Server.WebSocketServiceManager,System.String,System.Action{``0}})">
            <summary>Sets the shim of WebSocketServiceManager.AddService(String path, Action`1&lt;!!0&gt; initializer)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadcastAsyncByteArrayAction">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(Byte[] data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadcastAsyncStreamInt32Action">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(Stream stream, Int32 length, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadcastAsyncStringAction">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(String data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadcastByteArray">
            <summary>Sets the shim of WebSocketServiceManager.Broadcast(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadcastString">
            <summary>Sets the shim of WebSocketServiceManager.Broadcast(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.Broadping">
            <summary>Sets the shim of WebSocketServiceManager.Broadping()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.BroadpingString">
            <summary>Sets the shim of WebSocketServiceManager.Broadping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.Clear">
            <summary>Sets the shim of WebSocketServiceManager.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.CountGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.HostsGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Hosts()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.InternalTryGetServiceHostStringWebSocketServiceHostOut">
            <summary>Sets the shim of WebSocketServiceManager.InternalTryGetServiceHost(String path, WebSocketServiceHost&amp; host)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.ItemGetString">
            <summary>Sets the shim of WebSocketServiceManager.get_Item(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.KeepCleanGet">
            <summary>Sets the shim of WebSocketServiceManager.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServiceManager.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.PathsGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Paths()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.RemoveServiceString">
            <summary>Sets the shim of WebSocketServiceManager.RemoveService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.SessionCountGet">
            <summary>Sets the shim of WebSocketServiceManager.get_SessionCount()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.Start">
            <summary>Sets the shim of WebSocketServiceManager.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.StopUInt16String">
            <summary>Sets the shim of WebSocketServiceManager.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.TryGetServiceHostStringWebSocketServiceHostOut">
            <summary>Sets the shim of WebSocketServiceManager.TryGetServiceHost(String path, WebSocketServiceHost&amp; host)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.WaitTimeGet">
            <summary>Sets the shim of WebSocketServiceManager.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServiceManager.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.AllInstances.broadpingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocketServiceManager.broadping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadcastAsyncByteArrayAction">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(Byte[] data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadcastAsyncStreamInt32Action">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(Stream stream, Int32 length, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadcastAsyncStringAction">
            <summary>Sets the shim of WebSocketServiceManager.BroadcastAsync(String data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadcastByteArray">
            <summary>Sets the shim of WebSocketServiceManager.Broadcast(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadcastString">
            <summary>Sets the shim of WebSocketServiceManager.Broadcast(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.Broadping">
            <summary>Sets the shim of WebSocketServiceManager.Broadping()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.BroadpingString">
            <summary>Sets the shim of WebSocketServiceManager.Broadping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.Clear">
            <summary>Sets the shim of WebSocketServiceManager.Clear()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.ConstructorLogger">
            <summary>Sets the shim of WebSocketServiceManager.WebSocketServiceManager(Logger log)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.CountGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.HostsGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Hosts()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.InternalTryGetServiceHostStringWebSocketServiceHostOut">
            <summary>Sets the shim of WebSocketServiceManager.InternalTryGetServiceHost(String path, WebSocketServiceHost&amp; host)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.ItemGetString">
            <summary>Sets the shim of WebSocketServiceManager.get_Item(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.KeepCleanGet">
            <summary>Sets the shim of WebSocketServiceManager.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketServiceManager.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.PathsGet">
            <summary>Sets the shim of WebSocketServiceManager.get_Paths()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.RemoveServiceString">
            <summary>Sets the shim of WebSocketServiceManager.RemoveService(String path)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.SessionCountGet">
            <summary>Sets the shim of WebSocketServiceManager.get_SessionCount()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.Start">
            <summary>Sets the shim of WebSocketServiceManager.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.StopUInt16String">
            <summary>Sets the shim of WebSocketServiceManager.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.TryGetServiceHostStringWebSocketServiceHostOut">
            <summary>Sets the shim of WebSocketServiceManager.TryGetServiceHost(String path, WebSocketServiceHost&amp; host)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.WaitTimeGet">
            <summary>Sets the shim of WebSocketServiceManager.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketServiceManager.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketServiceManager.broadpingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocketServiceManager.broadping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager">
            <summary>Shim type of WebSocketSharp.Server.WebSocketSessionManager</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.#ctor(WebSocketSharp.Server.WebSocketSessionManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.ActiveIDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_ActiveIDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AddIWebSocketSession">
            <summary>Sets the shim of WebSocketSessionManager.Add(IWebSocketSession session)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.ActiveIDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_ActiveIDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.AddIWebSocketSession">
            <summary>Sets the shim of WebSocketSessionManager.Add(IWebSocketSession session)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadcastAsyncByteArrayAction">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(Byte[] data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadcastAsyncStreamInt32Action">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(Stream stream, Int32 length, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadcastAsyncStringAction">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(String data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadcastByteArray">
            <summary>Sets the shim of WebSocketSessionManager.Broadcast(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadcastString">
            <summary>Sets the shim of WebSocketSessionManager.Broadcast(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.Broadping">
            <summary>Sets the shim of WebSocketSessionManager.Broadping()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadpingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocketSessionManager.Broadping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.BroadpingString">
            <summary>Sets the shim of WebSocketSessionManager.Broadping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.CloseSessionString">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.CloseSessionStringCloseStatusCodeString">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id, CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.CloseSessionStringUInt16String">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id, UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.CountGet">
            <summary>Sets the shim of WebSocketSessionManager.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.IDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_IDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.InactiveIDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_InactiveIDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.ItemGetString">
            <summary>Sets the shim of WebSocketSessionManager.get_Item(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.KeepCleanGet">
            <summary>Sets the shim of WebSocketSessionManager.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketSessionManager.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.PingToString">
            <summary>Sets the shim of WebSocketSessionManager.PingTo(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.PingToStringString">
            <summary>Sets the shim of WebSocketSessionManager.PingTo(String message, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.RemoveString">
            <summary>Sets the shim of WebSocketSessionManager.Remove(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SendToAsyncByteArrayStringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(Byte[] data, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SendToAsyncStreamInt32StringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(Stream stream, Int32 length, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SendToAsyncStringStringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(String data, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SendToByteArrayString">
            <summary>Sets the shim of WebSocketSessionManager.SendTo(Byte[] data, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SendToStringString">
            <summary>Sets the shim of WebSocketSessionManager.SendTo(String data, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.SessionsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.Start">
            <summary>Sets the shim of WebSocketSessionManager.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.StopUInt16String">
            <summary>Sets the shim of WebSocketSessionManager.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.Sweep">
            <summary>Sets the shim of WebSocketSessionManager.Sweep()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.TryGetSessionStringIWebSocketSessionOut">
            <summary>Sets the shim of WebSocketSessionManager.TryGetSession(String id, IWebSocketSession&amp; session)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.WaitTimeGet">
            <summary>Sets the shim of WebSocketSessionManager.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketSessionManager.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances._BroadcastAsyncb__50_1Exception">
            <summary>Sets the shim of WebSocketSessionManager.&lt;BroadcastAsync&gt;b__50_1(Exception ex)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances._setSweepTimerb__36_0ObjectElapsedEventArgs">
            <summary>Sets the shim of WebSocketSessionManager.&lt;setSweepTimer&gt;b__36_0(Object sender, ElapsedEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.setSweepTimerDouble">
            <summary>Sets the shim of WebSocketSessionManager.setSweepTimer(Double interval)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.AllInstances.tryGetSessionStringIWebSocketSessionOut">
            <summary>Sets the shim of WebSocketSessionManager.tryGetSession(String id, IWebSocketSession&amp; session)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadcastAsyncByteArrayAction">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(Byte[] data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadcastAsyncStreamInt32Action">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(Stream stream, Int32 length, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadcastAsyncStringAction">
            <summary>Sets the shim of WebSocketSessionManager.BroadcastAsync(String data, Action completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadcastByteArray">
            <summary>Sets the shim of WebSocketSessionManager.Broadcast(Byte[] data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadcastString">
            <summary>Sets the shim of WebSocketSessionManager.Broadcast(String data)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.Broadping">
            <summary>Sets the shim of WebSocketSessionManager.Broadping()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadpingByteArrayTimeSpan">
            <summary>Sets the shim of WebSocketSessionManager.Broadping(Byte[] frameAsBytes, TimeSpan timeout)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.BroadpingString">
            <summary>Sets the shim of WebSocketSessionManager.Broadping(String message)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.CloseSessionString">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.CloseSessionStringCloseStatusCodeString">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id, CloseStatusCode code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.CloseSessionStringUInt16String">
            <summary>Sets the shim of WebSocketSessionManager.CloseSession(String id, UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.Constructor">
            <summary>Sets the shim of WebSocketSessionManager.WebSocketSessionManager()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.ConstructorLogger">
            <summary>Sets the shim of WebSocketSessionManager.WebSocketSessionManager(Logger logger)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.CountGet">
            <summary>Sets the shim of WebSocketSessionManager.get_Count()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.IDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_IDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.InactiveIDsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_InactiveIDs()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.ItemGetString">
            <summary>Sets the shim of WebSocketSessionManager.get_Item(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.KeepCleanGet">
            <summary>Sets the shim of WebSocketSessionManager.get_KeepClean()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.KeepCleanSetBoolean">
            <summary>Sets the shim of WebSocketSessionManager.set_KeepClean(Boolean value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.PingToString">
            <summary>Sets the shim of WebSocketSessionManager.PingTo(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.PingToStringString">
            <summary>Sets the shim of WebSocketSessionManager.PingTo(String message, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.RemoveString">
            <summary>Sets the shim of WebSocketSessionManager.Remove(String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SendToAsyncByteArrayStringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(Byte[] data, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SendToAsyncStreamInt32StringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(Stream stream, Int32 length, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SendToAsyncStringStringActionOfBoolean">
            <summary>Sets the shim of WebSocketSessionManager.SendToAsync(String data, String id, Action`1&lt;Boolean&gt; completed)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SendToByteArrayString">
            <summary>Sets the shim of WebSocketSessionManager.SendTo(Byte[] data, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SendToStringString">
            <summary>Sets the shim of WebSocketSessionManager.SendTo(String data, String id)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.SessionsGet">
            <summary>Sets the shim of WebSocketSessionManager.get_Sessions()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.Start">
            <summary>Sets the shim of WebSocketSessionManager.Start()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.StopUInt16String">
            <summary>Sets the shim of WebSocketSessionManager.Stop(UInt16 code, String reason)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.Sweep">
            <summary>Sets the shim of WebSocketSessionManager.Sweep()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.TryGetSessionStringIWebSocketSessionOut">
            <summary>Sets the shim of WebSocketSessionManager.TryGetSession(String id, IWebSocketSession&amp; session)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.WaitTimeGet">
            <summary>Sets the shim of WebSocketSessionManager.get_WaitTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.WaitTimeSetTimeSpan">
            <summary>Sets the shim of WebSocketSessionManager.set_WaitTime(TimeSpan value)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager._BroadcastAsyncb__50_1Exception">
            <summary>Sets the shim of WebSocketSessionManager.&lt;BroadcastAsync&gt;b__50_1(Exception ex)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager._setSweepTimerb__36_0ObjectElapsedEventArgs">
            <summary>Sets the shim of WebSocketSessionManager.&lt;setSweepTimer&gt;b__36_0(Object sender, ElapsedEventArgs e)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.createID">
            <summary>Sets the shim of WebSocketSessionManager.createID()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.setSweepTimerDouble">
            <summary>Sets the shim of WebSocketSessionManager.setSweepTimer(Double interval)</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.ShimWebSocketSessionManager.tryGetSessionStringIWebSocketSessionOut">
            <summary>Sets the shim of WebSocketSessionManager.tryGetSession(String id, IWebSocketSession&amp; session)</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.StubHttpServer">
            <summary>Stub type of WebSocketSharp.Server.HttpServer</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor(System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.#ctor(System.Net.IPAddress,System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubHttpServer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubHttpServer.InitializeStub">
            <summary>Initializes a new instance of type StubHttpServer</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubHttpServer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubHttpServer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.StubIWebSocketSession">
            <summary>Stub type of WebSocketSharp.Server.IWebSocketSession</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubIWebSocketSession.#ctor">
            <summary>Initializes a new instance of type StubIWebSocketSession</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubIWebSocketSession.WebSocketSharp#Server#IWebSocketSession#Context">
            <summary>Sets the stub of IWebSocketSession.get_Context()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubIWebSocketSession.ContextGet">
            <summary>Sets the stub of IWebSocketSession.get_Context()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubIWebSocketSession.WebSocketSharp#Server#IWebSocketSession#ID">
            <summary>Sets the stub of IWebSocketSession.get_ID()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubIWebSocketSession.IDGet">
            <summary>Sets the stub of IWebSocketSession.get_ID()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubIWebSocketSession.WebSocketSharp#Server#IWebSocketSession#Protocol">
            <summary>Sets the stub of IWebSocketSession.get_Protocol()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubIWebSocketSession.ProtocolGet">
            <summary>Sets the stub of IWebSocketSession.get_Protocol()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubIWebSocketSession.WebSocketSharp#Server#IWebSocketSession#StartTime">
            <summary>Sets the stub of IWebSocketSession.get_StartTime()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubIWebSocketSession.StartTimeGet">
            <summary>Sets the stub of IWebSocketSession.get_StartTime()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubIWebSocketSession.WebSocketSharp#Server#IWebSocketSession#State">
            <summary>Sets the stub of IWebSocketSession.get_State()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubIWebSocketSession.StateGet">
            <summary>Sets the stub of IWebSocketSession.get_State()</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.StubWebSocketBehavior">
            <summary>Stub type of WebSocketSharp.Server.WebSocketBehavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketBehavior</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnClose(WebSocketSharp.CloseEventArgs)">
            <summary>Sets the stub of WebSocketBehavior.OnClose(CloseEventArgs e)</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnCloseCloseEventArgs">
            <summary>Sets the stub of WebSocketBehavior.OnClose(CloseEventArgs e)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnError(WebSocketSharp.ErrorEventArgs)">
            <summary>Sets the stub of WebSocketBehavior.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnErrorErrorEventArgs">
            <summary>Sets the stub of WebSocketBehavior.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnMessage(WebSocketSharp.MessageEventArgs)">
            <summary>Sets the stub of WebSocketBehavior.OnMessage(MessageEventArgs e)</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnMessageMessageEventArgs">
            <summary>Sets the stub of WebSocketBehavior.OnMessage(MessageEventArgs e)</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnOpen">
            <summary>Sets the stub of WebSocketBehavior.OnOpen()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketBehavior.OnOpen01">
            <summary>Sets the stub of WebSocketBehavior.OnOpen()</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.StubWebSocketServer">
            <summary>Stub type of WebSocketSharp.Server.WebSocketServer</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor(System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.#ctor(System.Net.IPAddress,System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServer.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketServer</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost">
            <summary>Stub type of WebSocketSharp.Server.WebSocketServiceHost</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.#ctor(System.String,WebSocketSharp.Logger)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.BehaviorType">
            <summary>Sets the stub of WebSocketServiceHost.get_BehaviorType()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.BehaviorTypeGet">
            <summary>Sets the stub of WebSocketServiceHost.get_BehaviorType()</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.CreateSession">
            <summary>Sets the stub of WebSocketServiceHost.CreateSession()</summary>
        </member>
        <member name="F:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.CreateSession01">
            <summary>Sets the stub of WebSocketServiceHost.CreateSession()</summary>
        </member>
        <member name="M:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketServiceHost</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:WebSocketSharp.Server.Fakes.StubWebSocketServiceHost.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
